# AtlasMesh Fleet OS - mTLS Certificate Management
# Automated certificate provisioning and rotation for zero-trust architecture
# Abu Dhabi autonomous vehicle fleet operations security

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: atlasmesh-ca-issuer
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/type: ca-issuer
spec:
  ca:
    secretName: atlasmesh-ca-key-pair

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: atlasmesh-vault-issuer
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/type: vault-issuer
spec:
  vault:
    server: https://vault.atlasmesh.com
    path: pki/sign/atlasmesh-fleet-os
    auth:
      kubernetes:
        mountPath: /v1/auth/kubernetes
        role: cert-manager
        secretRef:
          name: cert-manager-vault-token
          key: token

---
# Root CA Certificate for AtlasMesh Fleet OS
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: atlasmesh-root-ca
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/type: root-ca
spec:
  secretName: atlasmesh-root-ca-tls
  duration: 8760h # 1 year
  renewBefore: 720h # 30 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
    localities:
      - "Abu Dhabi"
    provinces:
      - "Abu Dhabi"
  commonName: "AtlasMesh Fleet OS Root CA"
  isCA: true
  privateKey:
    algorithm: RSA
    size: 4096
  issuerRef:
    name: atlasmesh-vault-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# API Gateway mTLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: api-gateway-mtls
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/service: api-gateway
spec:
  secretName: api-gateway-mtls-tls
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "API Gateway"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "api-gateway.atlasmesh.local"
  dnsNames:
    - "api-gateway"
    - "api-gateway.atlasmesh-fleet-os"
    - "api-gateway.atlasmesh-fleet-os.svc"
    - "api-gateway.atlasmesh-fleet-os.svc.cluster.local"
    - "api.atlasmesh.com"
    - "api-staging.atlasmesh.com"
    - "api-uat.atlasmesh.com"
  ipAddresses:
    - "10.0.1.10"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Fleet Manager mTLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: fleet-manager-mtls
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/service: fleet-manager
spec:
  secretName: fleet-manager-mtls-tls
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "Fleet Manager"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "fleet-manager.atlasmesh.local"
  dnsNames:
    - "fleet-manager"
    - "fleet-manager.atlasmesh-fleet-os"
    - "fleet-manager.atlasmesh-fleet-os.svc"
    - "fleet-manager.atlasmesh-fleet-os.svc.cluster.local"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Policy Engine mTLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: policy-engine-mtls
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/service: policy-engine
spec:
  secretName: policy-engine-mtls-tls
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "Policy Engine"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "policy-engine.atlasmesh.local"
  dnsNames:
    - "policy-engine"
    - "policy-engine.atlasmesh-fleet-os"
    - "policy-engine.atlasmesh-fleet-os.svc"
    - "policy-engine.atlasmesh-fleet-os.svc.cluster.local"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Vehicle Gateway mTLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vehicle-gateway-mtls
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/service: vehicle-gateway
spec:
  secretName: vehicle-gateway-mtls-tls
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "Vehicle Gateway"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "vehicle-gateway.atlasmesh.local"
  dnsNames:
    - "vehicle-gateway"
    - "vehicle-gateway.atlasmesh-fleet-os"
    - "vehicle-gateway.atlasmesh-fleet-os.svc"
    - "vehicle-gateway.atlasmesh-fleet-os.svc.cluster.local"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Telemetry Ingestion mTLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: telemetry-ingestion-mtls
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/service: telemetry-ingestion
spec:
  secretName: telemetry-ingestion-mtls-tls
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "Telemetry Ingestion"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "telemetry-ingestion.atlasmesh.local"
  dnsNames:
    - "telemetry-ingestion"
    - "telemetry-ingestion.atlasmesh-fleet-os"
    - "telemetry-ingestion.atlasmesh-fleet-os.svc"
    - "telemetry-ingestion.atlasmesh-fleet-os.svc.cluster.local"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Map Data Contract mTLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: map-data-contract-mtls
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/service: map-data-contract
spec:
  secretName: map-data-contract-mtls-tls
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "Map Data Contract"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "map-data-contract.atlasmesh.local"
  dnsNames:
    - "map-data-contract"
    - "map-data-contract.atlasmesh-fleet-os"
    - "map-data-contract.atlasmesh-fleet-os.svc"
    - "map-data-contract.atlasmesh-fleet-os.svc.cluster.local"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Weather Fusion mTLS Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: weather-fusion-mtls
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/service: weather-fusion
spec:
  secretName: weather-fusion-mtls-tls
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "Weather Fusion"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "weather-fusion.atlasmesh.local"
  dnsNames:
    - "weather-fusion"
    - "weather-fusion.atlasmesh-fleet-os"
    - "weather-fusion.atlasmesh-fleet-os.svc"
    - "weather-fusion.atlasmesh-fleet-os.svc.cluster.local"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Edge Device Certificate Template
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: edge-device-template
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
    security.atlasmesh.com/type: edge-device-template
spec:
  secretName: edge-device-template-tls
  duration: 720h # 30 days (shorter for edge devices)
  renewBefore: 168h # 7 days
  subject:
    organizationalUnits:
      - "AtlasMesh Fleet OS"
      - "Edge Devices"
    organizations:
      - "AtlasMesh Technologies"
    countries:
      - "AE"
  commonName: "edge-device.atlasmesh.local"
  dnsNames:
    - "*.vehicle.atlasmesh.local"
    - "*.edge.atlasmesh.local"
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: atlasmesh-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io

---
# Certificate Rotation Policy
apiVersion: v1
kind: ConfigMap
metadata:
  name: certificate-rotation-policy
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
data:
  policy.yaml: |
    # AtlasMesh Fleet OS Certificate Rotation Policy
    # Ensures continuous security through automated certificate lifecycle management
    
    rotation_policy:
      # Service certificates (90 days)
      services:
        duration: 2160h  # 90 days
        renew_before: 360h  # 15 days
        algorithm: RSA
        key_size: 2048
        
      # Edge device certificates (30 days)
      edge_devices:
        duration: 720h  # 30 days
        renew_before: 168h  # 7 days
        algorithm: RSA
        key_size: 2048
        
      # Root CA (1 year)
      root_ca:
        duration: 8760h  # 1 year
        renew_before: 720h  # 30 days
        algorithm: RSA
        key_size: 4096
        
      # Intermediate CA (6 months)
      intermediate_ca:
        duration: 4380h  # 6 months
        renew_before: 720h  # 30 days
        algorithm: RSA
        key_size: 4096
    
    # Abu Dhabi specific requirements
    abu_dhabi_compliance:
      # UAE cybersecurity standards
      encryption_standards:
        - "AES-256"
        - "RSA-2048"
        - "ECDSA-P256"
        
      # Certificate transparency
      ct_logs:
        enabled: true
        logs:
          - "https://ct.googleapis.com/logs/argon2023/"
          - "https://ct.cloudflare.com/logs/nimbus2023/"
          
      # Audit requirements
      audit:
        certificate_issuance: true
        certificate_renewal: true
        certificate_revocation: true
        access_logging: true
        
      # Data residency
      ca_location: "UAE"
      key_storage: "UAE"
      
    # Monitoring and alerting
    monitoring:
      certificate_expiry_alerts:
        - threshold: 30d
          severity: warning
        - threshold: 7d
          severity: critical
        - threshold: 1d
          severity: emergency
          
      renewal_failure_alerts:
        enabled: true
        retry_attempts: 3
        escalation: true
        
    # Emergency procedures
    emergency:
      manual_renewal: true
      emergency_ca: true
      revocation_list: true
      
    # Integration with external systems
    integrations:
      vault:
        enabled: true
        path: "pki/atlasmesh"
        
      monitoring:
        prometheus: true
        grafana: true
        alertmanager: true
        
      logging:
        elasticsearch: true
        audit_trail: true

---
# Certificate Monitoring ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cert-manager-metrics
  namespace: atlasmesh-fleet-os
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
  endpoints:
  - port: tcp-prometheus-servicemonitor
    interval: 60s
    path: /metrics

---
# Network Policy for Certificate Manager
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cert-manager-network-policy
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: atlasmesh-fleet-os
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9402  # Metrics port
  egress:
  - to: []  # Allow all outbound (for ACME, Vault, etc.)
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
