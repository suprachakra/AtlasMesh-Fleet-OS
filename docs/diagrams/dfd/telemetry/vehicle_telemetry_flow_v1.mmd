graph TB
    %% AtlasMesh Fleet OS - Vehicle Telemetry Data Flow
    %% HIGH PRIORITY: Real-time telemetry processing and analytics pipeline
    %% Version 1.0 | Generated from: Kafka topics + service specs | Performance: 10Hz per vehicle
    
    %% Vehicle Sources
    Vehicle1[🚗 Vehicle AV-001<br/>Sensors + ROS2]
    Vehicle2[🚗 Vehicle AV-002<br/>Sensors + ROS2]
    VehicleN[🚗 Vehicle AV-N<br/>1000+ Vehicles]
    
    %% Edge Processing
    EdgeAgent1[🤖 Vehicle Agent<br/>ROS2 + Edge Compute]
    EdgeAgent2[🤖 Vehicle Agent<br/>ROS2 + Edge Compute]
    EdgeAgentN[🤖 Vehicle Agent<br/>ROS2 + Edge Compute]
    
    %% Fleet Communication
    VehicleGateway[🌐 Vehicle Gateway<br/>WebSocket Server<br/>Port: 8082]
    
    %% Message Queue
    KafkaCluster[📨 Kafka Cluster<br/>Topics: vehicle.telemetry.*<br/>Partitioned by vehicle_id]
    
    %% Stream Processing
    TelemetryIngest[📡 Telemetry Ingest<br/>Go + Kafka Streams<br/>Real-time Processing]
    
    %% Data Storage
    ClickHouse[🏎️ ClickHouse<br/>Hot Path Analytics<br/>Real-time Queries]
    TimescaleDB[⏰ TimescaleDB<br/>Time-series Storage<br/>Historical Data]
    MinIO[🗄️ MinIO<br/>Cold Storage<br/>Raw Telemetry Archive]
    
    %% Analytics & ML
    AnalyticsEngine[📊 Analytics Engine<br/>Real-time Dashboards<br/>Fleet Insights]
    MLPipeline[🧠 ML Pipeline<br/>Feature Engineering<br/>Model Training]
    PredictiveMaint[🔧 Predictive Maintenance<br/>RUL Prediction<br/>Anomaly Detection]
    
    %% Monitoring & Alerts
    Monitoring[📈 Monitoring Stack<br/>Prometheus + Grafana<br/>System Health]
    AlertManager[🚨 Alert Manager<br/>Threshold Alerts<br/>Anomaly Alerts]
    
    %% Control Center
    ControlCenter[🖥️ Control Center UI<br/>Real-time Dashboards<br/>Fleet Operations]
    
    %% External Systems
    UAEGov[🏛️ UAE Government<br/>Compliance Reporting<br/>Safety Data]
    WeatherService[🌤️ Weather Fusion<br/>Environmental Context<br/>Multi-source Data]
    
    %% === TELEMETRY COLLECTION ===
    
    Vehicle1 -->|"CAN Bus + Ethernet<br/>Sensor Data<br/>1000Hz"| EdgeAgent1
    Vehicle2 -->|"CAN Bus + Ethernet<br/>Sensor Data<br/>1000Hz"| EdgeAgent2
    VehicleN -->|"CAN Bus + Ethernet<br/>Sensor Data<br/>1000Hz"| EdgeAgentN
    
    %% Edge Processing
    EdgeAgent1 -->|"ROS2 Topics<br/>Aggregated Telemetry<br/>10Hz"| EdgeAgent1
    EdgeAgent2 -->|"ROS2 Topics<br/>Aggregated Telemetry<br/>10Hz"| EdgeAgent2
    EdgeAgentN -->|"ROS2 Topics<br/>Aggregated Telemetry<br/>10Hz"| EdgeAgentN
    
    %% Vehicle to Fleet Communication
    EdgeAgent1 -->|"WebSocket<br/>JSON Telemetry<br/>10Hz"| VehicleGateway
    EdgeAgent2 -->|"WebSocket<br/>JSON Telemetry<br/>10Hz"| VehicleGateway
    EdgeAgentN -->|"WebSocket<br/>JSON Telemetry<br/>10Hz"| VehicleGateway
    
    %% === STREAM PROCESSING ===
    
    VehicleGateway -->|"Kafka Producer<br/>Avro Messages<br/>Topic: vehicle.telemetry.{id}"| KafkaCluster
    
    KafkaCluster -->|"Kafka Consumer<br/>Batch Processing<br/>1000 msg/sec"| TelemetryIngest
    
    %% Data Enrichment
    WeatherService -->|"Weather Context<br/>Environmental Data<br/>1Hz"| TelemetryIngest
    
    %% === DATA STORAGE ===
    
    TelemetryIngest -->|"Real-time Insert<br/>Columnar Storage<br/>Hot Data"| ClickHouse
    TelemetryIngest -->|"Time-series Insert<br/>Hypertables<br/>Compressed"| TimescaleDB
    TelemetryIngest -->|"Raw Archive<br/>Parquet Files<br/>Cold Storage"| MinIO
    
    %% === ANALYTICS & ML ===
    
    ClickHouse -->|"Real-time Queries<br/>Aggregations<br/>Sub-second"| AnalyticsEngine
    TimescaleDB -->|"Historical Queries<br/>Time-series Analysis<br/>Trends"| AnalyticsEngine
    
    ClickHouse -->|"Feature Extraction<br/>ML Training Data<br/>Batch"| MLPipeline
    MLPipeline -->|"Trained Models<br/>Inference Pipeline<br/>Real-time"| PredictiveMaint
    
    PredictiveMaint -->|"Maintenance Alerts<br/>RUL Predictions<br/>Anomalies"| AlertManager
    
    %% === MONITORING & ALERTING ===
    
    TelemetryIngest -->|"Processing Metrics<br/>Throughput, Latency<br/>1Hz"| Monitoring
    ClickHouse -->|"Query Performance<br/>Storage Metrics<br/>1Hz"| Monitoring
    KafkaCluster -->|"Topic Metrics<br/>Consumer Lag<br/>1Hz"| Monitoring
    
    Monitoring -->|"Threshold Alerts<br/>System Health<br/>Real-time"| AlertManager
    AnalyticsEngine -->|"Business Alerts<br/>Fleet KPIs<br/>Real-time"| AlertManager
    
    %% === USER INTERFACES ===
    
    AnalyticsEngine -->|"Real-time Data<br/>WebSocket<br/>Dashboard Updates"| ControlCenter
    AlertManager -->|"Alert Notifications<br/>WebSocket<br/>Urgent Alerts"| ControlCenter
    
    %% === EXTERNAL REPORTING ===
    
    TimescaleDB -->|"Compliance Data<br/>Safety Reports<br/>Daily"| UAEGov
    AnalyticsEngine -->|"Fleet Statistics<br/>Operational Reports<br/>Hourly"| UAEGov
    
    %% === DATA FLOW ANNOTATIONS ===
    
    subgraph "Edge Processing Layer"
        EdgeAgent1
        EdgeAgent2
        EdgeAgentN
        note1[📝 Edge Processing:<br/>• Sensor fusion<br/>• Data compression<br/>• Local filtering<br/>• Bandwidth optimization]
    end
    
    subgraph "Communication Layer"
        VehicleGateway
        KafkaCluster
        note2[📝 Communication:<br/>• WebSocket for real-time<br/>• Kafka for reliability<br/>• Avro for schema evolution<br/>• Partitioning by vehicle_id]
    end
    
    subgraph "Stream Processing Layer"
        TelemetryIngest
        note3[📝 Stream Processing:<br/>• Real-time validation<br/>• Data enrichment<br/>• Format conversion<br/>• Quality scoring]
    end
    
    subgraph "Storage Layer"
        ClickHouse
        TimescaleDB
        MinIO
        note4["📝 Storage Strategy:<br>&bull; Hot: ClickHouse (7 days)<br>&bull; Warm: TimescaleDB (90 days)<br>&bull; Cold: MinIO (7 years)<br>&bull; Automatic tiering"]
    end
    
    subgraph "Analytics Layer"
        AnalyticsEngine
        MLPipeline
        PredictiveMaint
        note5[📝 Analytics:<br/>• Real-time dashboards<br/>• Predictive models<br/>• Anomaly detection<br/>• Fleet optimization]
    end
    
    %% === PERFORMANCE REQUIREMENTS ===
    
    subgraph "Performance SLAs"
        perf1[📊 Throughput:<br/>• 1000 vehicles × 10Hz = 10K msg/sec<br/>• Peak: 50K msg/sec<br/>• Kafka: 1M msg/sec capacity]
        perf2[⚡ Latency:<br/>• Edge to Gateway: <100ms<br/>• Gateway to Storage: <500ms<br/>• Query Response: <1s]
        perf3[💾 Storage:<br/>• Hot data: 7 days × 10TB/day = 70TB<br/>• Warm data: 90 days × 1TB/day = 90TB<br/>• Cold archive: 7 years × 100GB/day = 256TB]
    end
    
    %% === DATA QUALITY & GOVERNANCE ===
    
    subgraph "Data Quality"
        quality1["✅ Validation:<br>&bull; Schema validation (Avro)<br>&bull; Range checks<br>&bull; Timestamp validation<br>&bull; Duplicate detection"]
        quality2[🔍 Monitoring:<br/>• Data freshness<br/>• Completeness<br/>• Accuracy scores<br/>• Drift detection]
        quality3[🛡️ Privacy:<br/>• PII redaction<br/>• Data residency<br/>• Retention policies<br/>• Access controls]
    end
    
    %% Styling
    classDef vehicle fill:#ff6b6b,stroke:#d63031,stroke-width:2px,color:#fff
    classDef edge fill:#74b9ff,stroke:#0984e3,stroke-width:2px,color:#fff
    classDef communication fill:#ffeaa7,stroke:#fdcb6e,stroke-width:2px
    classDef processing fill:#55a3ff,stroke:#2d3436,stroke-width:2px,color:#fff
    classDef storage fill:#fd79a8,stroke:#e84393,stroke-width:2px,color:#fff
    classDef analytics fill:#00b894,stroke:#00a085,stroke-width:2px,color:#fff
    classDef monitoring fill:#e17055,stroke:#d63031,stroke-width:2px,color:#fff
    classDef external fill:#636e72,stroke:#2d3436,stroke-width:2px,color:#fff
    classDef ui fill:#a29bfe,stroke:#6c5ce7,stroke-width:2px,color:#fff
    
    class Vehicle1,Vehicle2,VehicleN vehicle
    class EdgeAgent1,EdgeAgent2,EdgeAgentN edge
    class VehicleGateway,KafkaCluster communication
    class TelemetryIngest processing
    class ClickHouse,TimescaleDB,MinIO storage
    class AnalyticsEngine,MLPipeline,PredictiveMaint analytics
    class Monitoring,AlertManager monitoring
    class UAEGov,WeatherService external
    class ControlCenter ui
