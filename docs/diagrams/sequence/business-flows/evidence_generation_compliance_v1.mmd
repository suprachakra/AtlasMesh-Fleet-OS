---
title: Evidence Generation & Compliance Audit - AtlasMesh Fleet OS
---
sequenceDiagram
    participant EE as Evidence Engine
    participant AL as Audit Log
    participant PE as Policy Engine
    participant TS as Mission Management
    participant KS as Key/Secret Management
    participant EB as Evidence Bundle
    participant CR as Compliance Report
    participant REG as Regulator
    
    Note over EE,REG: Automated Evidence Generation for Compliance
    
    %% Continuous Evidence Collection
    loop Continuous Monitoring
        TS->>+EE: ReportTripEvent(tripId, eventType, timestamp, context)
        EE->>EE: Classify event for compliance relevance
        EE->>+AL: StoreComplianceEvent(event, classification, metadata)
        AL->>AL: Cryptographically sign event
        AL->>-EE: EventStored(eventId, signature)
        EE->>-TS: EventRecorded()
        
        PE->>+EE: ReportPolicyDecision(policyId, decision, context, rationale)
        EE->>EE: Link decision to compliance requirements
        EE->>+AL: StorePolicyDecision(decision, complianceMapping)
        AL->>-EE: DecisionStored(decisionId, signature)
        EE->>-PE: DecisionRecorded()
    end
    
    %% Scheduled Evidence Bundle Generation
    EE->>EE: Trigger scheduled evidence generation
    EE->>+AL: CollectComplianceEvents(timeRange, complianceFramework)
    AL->>AL: Query cryptographically signed events
    AL->>-EE: ComplianceEvents(events, signatures, chainOfCustody)
    
    EE->>+PE: GetPolicyCompliance(timeRange, regulatoryRequirements)
    PE->>PE: Analyze policy adherence
    PE->>-EE: ComplianceAnalysis(adherenceRate, violations, mitigations)
    
    %% Evidence Bundle Creation
    EE->>+EB: CreateEvidenceBundle(events, analysis, metadata)
    EB->>EB: Aggregate evidence items
    EB->>EB: Generate compliance mappings
    EB->>+KS: SignEvidenceBundle(bundleHash, metadata)
    KS->>KS: Generate cryptographic signature
    KS->>-EB: BundleSigned(signature, certificate, timestamp)
    
    EB->>EB: Validate bundle integrity
    EB->>+AL: ArchiveEvidenceBundle(bundleId, signature, metadata)
    AL->>-EB: BundleArchived(archiveId)
    EB->>-EE: EvidenceBundleCreated(bundleId, integrityHash)
    
    %% Compliance Report Generation
    EE->>+CR: GenerateComplianceReport(bundleId, regulatoryFramework)
    CR->>CR: Format report per regulatory requirements
    CR->>CR: Include executive summary and technical details
    CR->>+KS: SignComplianceReport(reportHash, metadata)
    KS->>-CR: ReportSigned(signature, certificate)
    CR->>-EE: ComplianceReportReady(reportId, downloadUrl)
    
    %% Regulatory Submission (if required)
    alt Regulatory Submission Required
        EE->>+REG: SubmitComplianceReport(reportId, submissionMetadata)
        REG->>REG: Validate report format and signatures
        REG->>+KS: VerifyReportSignature(reportHash, signature)
        KS->>-REG: SignatureValid(isValid, certificateChain)
        
        alt Report Accepted
            REG->>+AL: LogRegulatorySubmission(reportId, accepted=true)
            AL->>-REG: SubmissionLogged()
            REG->>-EE: SubmissionAccepted(confirmationId, nextDueDate)
            
        else Report Rejected
            REG->>+AL: LogRegulatorySubmission(reportId, accepted=false, reason)
            AL->>-REG: SubmissionLogged()
            REG->>-EE: SubmissionRejected(reason, correctionRequired)
            
            EE->>EE: Schedule corrective action
        end
        
    else Internal Audit Only
        EE->>+AL: LogInternalAudit(bundleId, reportId, auditComplete=true)
        AL->>-EE: AuditLogged()
    end
    
    %% Continuous Monitoring & Alerting
    EE->>EE: Monitor compliance metrics
    EE->>EE: Check for policy violations or gaps
    
    alt Compliance Issues Detected
        EE->>+PE: TriggerComplianceAlert(issueType, severity, affectedSystems)
        PE->>PE: Evaluate compliance policies
        PE->>-EE: ComplianceAction(required, mitigationSteps)
        
        EE->>EE: Execute automated mitigations
        EE->>+AL: LogComplianceMitigation(issueId, actions, outcome)
        AL->>-EE: MitigationLogged()
    end
