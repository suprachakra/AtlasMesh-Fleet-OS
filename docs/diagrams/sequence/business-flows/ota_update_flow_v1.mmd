---
title: OTA Update Flow - AtlasMesh Fleet OS
---
sequenceDiagram
    participant OM as OTA Manager
    participant FM as Fleet Manager
    participant VA as Vehicle Agent
    participant KS as Key/Secret Management
    participant PE as Policy Engine
    participant AL as Audit Log
    participant EB as Evidence Bundle
    
    Note over OM,EB: Over-The-Air Update Process
    
    %% Update Preparation
    OM->>OM: Prepare update package
    OM->>+KS: SignUpdatePackage(packageHash, metadata)
    KS->>KS: Generate cryptographic signature
    KS->>AL: Log package signing
    KS->>-OM: SignedPackage(signature, certificate)
    
    %% Policy Evaluation
    OM->>+PE: EvaluatePolicy(otaUpdate, vehicleList, updateMetadata)
    PE->>PE: Check update policies and constraints
    PE->>AL: Log OTA policy evaluation
    PE->>-OM: PolicyResult(allowedVehicles, constraints)
    
    %% Staged Rollout
    loop For Each Vehicle Cohort
        OM->>+FM: GetVehicleStatus(vehicleIds)
        FM->>-OM: VehicleStatuses(statuses)
        
        OM->>OM: Filter eligible vehicles
        
        loop For Each Eligible Vehicle
            OM->>+VA: NotifyUpdateAvailable(updateId, metadata, signature)
            VA->>VA: Validate update signature
            VA->>+KS: VerifySignature(updateHash, signature)
            KS->>-VA: SignatureValid(isValid)
            
            alt Signature Valid and Vehicle Ready
                VA->>+OM: RequestUpdate(vehicleId, updateId)
                OM->>OM: Prepare secure download
                OM->>-VA: UpdateDownloadURL(secureUrl, checksum)
                
                VA->>VA: Download update package
                VA->>VA: Verify package integrity
                
                %% Pre-installation Checks
                VA->>+PE: EvaluatePolicy(preInstallation, vehicleState)
                PE->>AL: Log pre-installation check
                PE->>-VA: PolicyResult(canInstall)
                
                alt Installation Allowed
                    VA->>VA: Install update (A/B deployment)
                    VA->>VA: Validate installation
                    VA->>+OM: UpdateInstalled(vehicleId, updateId, status=SUCCESS)
                    OM->>AL: Log successful update
                    OM->>+EB: GenerateUpdateEvidence(vehicleId, updateId)
                    EB->>-OM: EvidenceBundle(cryptographicProof)
                    OM->>-VA: InstallationAck()
                    
                else Installation Blocked
                    VA->>+OM: UpdateFailed(vehicleId, updateId, reason=POLICY_VIOLATION)
                    OM->>AL: Log update failure
                    OM->>-VA: FailureAck()
                end
                
            else Signature Invalid or Vehicle Not Ready
                VA->>+OM: UpdateRejected(vehicleId, updateId, reason)
                OM->>AL: Log update rejection
                OM->>-VA: RejectionAck()
            end
        end
        
        %% Monitor Rollout Health
        OM->>OM: Monitor rollout metrics
        OM->>+PE: EvaluatePolicy(rolloutHealth, metrics)
        PE->>-OM: PolicyResult(continueRollout)
        
        alt Rollout Healthy
            OM->>OM: Continue to next cohort
        else Rollout Issues Detected
            OM->>OM: Pause rollout
            OM->>AL: Log rollout pause
            break Rollout Paused
                OM->>OM: Investigate issues
            end
        end
    end
