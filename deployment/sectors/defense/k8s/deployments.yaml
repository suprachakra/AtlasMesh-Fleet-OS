apiVersion: apps/v1
kind: Deployment
metadata:
  name: vehicle-agent
  namespace: atlasmesh-defense
  labels:
    sector: defense
    security-level: classified
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: vehicle-agent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vehicle-agent
      sector: defense
  template:
    metadata:
      labels:
        app: vehicle-agent
        sector: defense
        security-level: classified
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: vehicle-agent
        image: atlasmesh/vehicle-agent:latest
        ports:
        - containerPort: 8080
        env:
        - name: ATLASMESH_SECTOR
          value: "defense"
        - name: ATLASMESH_ENV
          value: "production"
        - name: SECURITY_LEVEL
          value: "classified"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: db-password
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: encryption-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "4Gi"
            cpu: "2"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /etc/atlasmesh/config
        - name: tls-certs
          mountPath: /etc/atlasmesh/tls
        - name: encryption-keys
          mountPath: /etc/atlasmesh/encryption
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: defense-config
      - name: tls-certs
        secret:
          secretName: defense-tls-certs
      - name: encryption-keys
        secret:
          secretName: defense-encryption-keys
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet-manager
  namespace: atlasmesh-defense
  labels:
    sector: defense
    security-level: classified
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: fleet-manager
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fleet-manager
      sector: defense
  template:
    metadata:
      labels:
        app: fleet-manager
        sector: defense
        security-level: classified
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: fleet-manager
        image: atlasmesh/fleet-manager:latest
        ports:
        - containerPort: 8080
        env:
        - name: ATLASMESH_SECTOR
          value: "defense"
        - name: ATLASMESH_ENV
          value: "production"
        - name: SECURITY_LEVEL
          value: "classified"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: db-password
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: encryption-key
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "8Gi"
            cpu: "4"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /etc/atlasmesh/config
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: defense-config
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dispatch-service
  namespace: atlasmesh-defense
  labels:
    sector: defense
    security-level: classified
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: dispatch-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dispatch-service
      sector: defense
  template:
    metadata:
      labels:
        app: dispatch-service
        sector: defense
        security-level: classified
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: dispatch-service
        image: atlasmesh/dispatch-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: ATLASMESH_SECTOR
          value: "defense"
        - name: ATLASMESH_ENV
          value: "production"
        - name: SECURITY_LEVEL
          value: "classified"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: db-password
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: encryption-key
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "8Gi"
            cpu: "4"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /etc/atlasmesh/config
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: defense-config
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: control-center-ui
  namespace: atlasmesh-defense
  labels:
    sector: defense
    security-level: classified
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: control-center-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: control-center-ui
      sector: defense
  template:
    metadata:
      labels:
        app: control-center-ui
        sector: defense
        security-level: classified
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: control-center-ui
        image: atlasmesh/control-center-ui:latest
        ports:
        - containerPort: 8080
        env:
        - name: ATLASMESH_SECTOR
          value: "defense"
        - name: ATLASMESH_ENV
          value: "production"
        - name: SECURITY_LEVEL
          value: "classified"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: db-password
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: encryption-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "4Gi"
            cpu: "2"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /etc/atlasmesh/config
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: defense-config
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nato-command-adapter
  namespace: atlasmesh-defense
  labels:
    sector: defense
    security-level: classified
    app.kubernetes.io/name: atlasmesh-fleet-os
    app.kubernetes.io/component: nato-command-adapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nato-command-adapter
      sector: defense
  template:
    metadata:
      labels:
        app: nato-command-adapter
        sector: defense
        security-level: classified
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: nato-command-adapter
        image: atlasmesh/nato-command-adapter:latest
        ports:
        - containerPort: 8080
        env:
        - name: ATLASMESH_SECTOR
          value: "defense"
        - name: ATLASMESH_ENV
          value: "production"
        - name: SECURITY_LEVEL
          value: "classified"
        - name: NATO_COMMAND_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: nato-command-password
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: defense-secrets
              key: encryption-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "2Gi"
            cpu: "1"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /etc/atlasmesh/config
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: defense-config
      - name: tmp
        emptyDir: {}

