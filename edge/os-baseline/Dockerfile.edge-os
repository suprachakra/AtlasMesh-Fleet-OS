# AtlasMesh Fleet OS - Hardened Edge OS Baseline
# Ubuntu 22.04 LTS with security hardening, container runtime, and TPM support

FROM ubuntu:22.04

LABEL maintainer="AtlasMesh <engineering@atlasmesh.com>"
LABEL description="Hardened Ubuntu LTS edge OS for autonomous vehicle operations"
LABEL version="1.0.0"
LABEL sector="multi-sector"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV CONTAINER_RUNTIME=containerd
ENV TPM_VERSION=2.0
ENV SECURE_BOOT_ENABLED=true
ENV ATLASMESH_EDGE_VERSION=1.0.0

# Update system and install essential packages
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
    # Core system packages
    curl \
    wget \
    gnupg \
    lsb-release \
    ca-certificates \
    apt-transport-https \
    software-properties-common \
    # Security packages
    fail2ban \
    ufw \
    rkhunter \
    chkrootkit \
    aide \
    auditd \
    # TPM and secure boot support
    tpm2-tools \
    tpm2-abrmd \
    libtss2-dev \
    shim-signed \
    grub-efi-amd64-signed \
    mokutil \
    # Container runtime dependencies
    containerd \
    runc \
    # Networking and communication
    openssh-server \
    chrony \
    iptables \
    netfilter-persistent \
    # Monitoring and logging
    rsyslog \
    logrotate \
    htop \
    iotop \
    # Development and debugging tools
    strace \
    tcpdump \
    netcat \
    # Hardware support
    pciutils \
    usbutils \
    dmidecode \
    lshw \
    # File system tools
    e2fsprogs \
    xfsprogs \
    cryptsetup \
    # Time synchronization
    ntp \
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Docker CLI (for compatibility)
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Configure containerd
COPY config/containerd/config.toml /etc/containerd/config.toml
RUN systemctl enable containerd

# Configure TPM 2.0
COPY config/tpm/tpm2-abrmd.conf /etc/dbus-1/system.d/tpm2-abrmd.conf
RUN systemctl enable tpm2-abrmd

# Configure secure boot
COPY config/secureboot/mokutil.conf /etc/mokutil.conf

# Security hardening
COPY config/security/sysctl.conf /etc/sysctl.d/99-atlasmesh-security.conf
COPY config/security/limits.conf /etc/security/limits.d/99-atlasmesh.conf
COPY config/security/login.defs /etc/login.defs
COPY config/security/ssh_config /etc/ssh/sshd_config
COPY config/security/fail2ban.conf /etc/fail2ban/jail.d/atlasmesh.conf
COPY config/security/ufw.rules /etc/ufw/user.rules

# Configure audit system
COPY config/audit/audit.rules /etc/audit/rules.d/atlasmesh.rules
RUN systemctl enable auditd

# Configure logging
COPY config/logging/rsyslog.conf /etc/rsyslog.d/50-atlasmesh.conf
COPY config/logging/logrotate.conf /etc/logrotate.d/atlasmesh

# Configure time synchronization
COPY config/time/chrony.conf /etc/chrony/chrony.conf
COPY config/time/ntp.conf /etc/ntp.conf
RUN systemctl enable chrony

# Configure networking
COPY config/network/interfaces /etc/network/interfaces
COPY config/network/resolved.conf /etc/systemd/resolved.conf

# Install AtlasMesh edge components
COPY bin/atlasmesh-edge-agent /usr/local/bin/
COPY bin/atlasmesh-tpm-manager /usr/local/bin/
COPY bin/atlasmesh-secure-boot-validator /usr/local/bin/
COPY systemd/atlasmesh-edge-agent.service /etc/systemd/system/
COPY systemd/atlasmesh-tpm-manager.service /etc/systemd/system/
COPY systemd/atlasmesh-secure-boot-validator.service /etc/systemd/system/

# Make binaries executable
RUN chmod +x /usr/local/bin/atlasmesh-* && \
    systemctl enable atlasmesh-edge-agent && \
    systemctl enable atlasmesh-tpm-manager && \
    systemctl enable atlasmesh-secure-boot-validator

# Create AtlasMesh user and directories
RUN useradd -r -s /bin/false -d /var/lib/atlasmesh atlasmesh && \
    mkdir -p /var/lib/atlasmesh/{data,logs,config,certs} && \
    mkdir -p /etc/atlasmesh/{vehicle-profiles,policies,certificates} && \
    chown -R atlasmesh:atlasmesh /var/lib/atlasmesh && \
    chown -R atlasmesh:atlasmesh /etc/atlasmesh

# Set up certificate directories
RUN mkdir -p /etc/ssl/atlasmesh/{ca,certs,private} && \
    chmod 700 /etc/ssl/atlasmesh/private && \
    chown -R atlasmesh:atlasmesh /etc/ssl/atlasmesh

# Configure file system permissions
RUN chmod 600 /etc/ssh/sshd_config && \
    chmod 600 /etc/audit/rules.d/atlasmesh.rules && \
    chmod 644 /etc/sysctl.d/99-atlasmesh-security.conf

# Health check script
COPY scripts/health-check.sh /usr/local/bin/health-check.sh
RUN chmod +x /usr/local/bin/health-check.sh

# Startup script
COPY scripts/startup.sh /usr/local/bin/startup.sh
RUN chmod +x /usr/local/bin/startup.sh

# Expose necessary ports
EXPOSE 22    # SSH
EXPOSE 8080  # Edge agent API
EXPOSE 9090  # Metrics
EXPOSE 8443  # Secure edge API

# Set up volumes for persistent data
VOLUME ["/var/lib/atlasmesh", "/etc/atlasmesh", "/var/log"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /usr/local/bin/health-check.sh

# Default command
CMD ["/usr/local/bin/startup.sh"]
