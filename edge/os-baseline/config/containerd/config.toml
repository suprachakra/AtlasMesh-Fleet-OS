# AtlasMesh Fleet OS - Containerd Configuration
# Optimized for autonomous vehicle edge computing

version = 2

# Root directory for containerd metadata
root = "/var/lib/containerd"

# State directory for containerd
state = "/run/containerd"

# Plugin directory
plugin_dir = ""

# Disabled plugins
disabled_plugins = []

# Required plugins
required_plugins = []

# OOM score for containerd daemon
oom_score = 0

# Import configuration from other files
imports = []

# Debug configuration
[debug]
  address = ""
  uid = 0
  gid = 0
  level = "info"

# Metrics configuration
[metrics]
  address = "127.0.0.1:1338"
  grpc_histogram = false

# gRPC configuration
[grpc]
  address = "/run/containerd/containerd.sock"
  tcp_address = ""
  tcp_tls_cert = ""
  tcp_tls_key = ""
  uid = 0
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216

# TLS configuration for gRPC
[ttrpc]
  address = ""
  uid = 0
  gid = 0

# Plugin configurations
[plugins]

  # CRI plugin configuration
  [plugins."io.containerd.grpc.v1.cri"]
    disable_tcp_service = true
    stream_server_address = "127.0.0.1"
    stream_server_port = "0"
    stream_idle_timeout = "4h0m0s"
    enable_selinux = false
    selinux_category_range = 1024
    sandbox_image = "registry.k8s.io/pause:3.9"
    stats_collect_period = 10
    systemd_cgroup = true
    enable_tls_streaming = false
    max_container_log_line_size = 16384
    disable_cgroup = false
    disable_apparmor = false
    restrict_oom_score_adj = false
    max_concurrent_downloads = 3
    disable_proc_mount = false
    unset_seccomp_profile = ""
    tolerate_missing_hugetlb_controller = true
    disable_hugetlb_controller = true
    ignore_image_defined_volumes = false
    netns_mounts_under_state_dir = false

    # Container runtime configuration
    [plugins."io.containerd.grpc.v1.cri".containerd]
      snapshotter = "overlayfs"
      default_runtime_name = "runc"
      no_pivot = false
      disable_snapshot_annotations = true
      discard_unpacked_layers = false

      # Runtime configurations
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]

        # Default runc runtime
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          runtime_type = "io.containerd.runc.v2"
          runtime_engine = ""
          runtime_root = ""
          privileged_without_host_devices = false
          base_runtime_spec = ""
          cni_conf_dir = "/etc/cni/net.d"
          cni_max_conf_num = 1

          # runc options
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
            BinaryName = "runc"
            Root = ""
            CriuPath = ""
            CriuImagePath = ""
            CriuWorkPath = ""

        # Secure runtime for critical vehicle operations
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.atlasmesh-secure]
          runtime_type = "io.containerd.runc.v2"
          runtime_engine = ""
          runtime_root = ""
          privileged_without_host_devices = false
          base_runtime_spec = "/etc/containerd/atlasmesh-secure-spec.json"

          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.atlasmesh-secure.options]
            SystemdCgroup = true
            BinaryName = "runc"
            Root = ""

      # Untrusted workload runtime (gVisor)
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.gvisor]
        runtime_type = "io.containerd.runsc.v1"
        runtime_engine = ""
        runtime_root = ""
        privileged_without_host_devices = false
        base_runtime_spec = ""

    # CNI plugin configuration
    [plugins."io.containerd.grpc.v1.cri".cni]
      bin_dir = "/opt/cni/bin"
      conf_dir = "/etc/cni/net.d"
      max_conf_num = 1
      conf_template = ""
      ip_pref = ""

    # Registry configuration
    [plugins."io.containerd.grpc.v1.cri".registry]
      config_path = "/etc/containerd/certs.d"

      # Registry mirrors and authentication
      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
          endpoint = ["https://registry-1.docker.io"]
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."registry.atlasmesh.com"]
          endpoint = ["https://registry.atlasmesh.com"]

      # Registry authentication
      [plugins."io.containerd.grpc.v1.cri".registry.configs]
        [plugins."io.containerd.grpc.v1.cri".registry.configs."registry.atlasmesh.com".tls]
          cert_file = "/etc/ssl/atlasmesh/certs/registry-client.crt"
          key_file = "/etc/ssl/atlasmesh/private/registry-client.key"
          ca_file = "/etc/ssl/atlasmesh/ca/ca.crt"
        [plugins."io.containerd.grpc.v1.cri".registry.configs."registry.atlasmesh.com".auth]
          username = ""
          password = ""
          auth = ""
          identitytoken = ""

    # Image configuration
    [plugins."io.containerd.grpc.v1.cri".image_decryption]
      key_model = ""

    # X.509 key pair configuration for image decryption
    [[plugins."io.containerd.grpc.v1.cri".image_decryption.keys]]
      protocol = "jwe"
      keys = []

    # Sandbox configuration
    [plugins."io.containerd.grpc.v1.cri".sandbox_image]

  # Content plugin
  [plugins."io.containerd.content.v1.content"]
    gc_policy = "sync"

  # Snapshotter plugins
  [plugins."io.containerd.snapshotter.v1.overlayfs"]
    root_path = ""
    upperdir_label = false
    mount_options = []
    sync_remove = false
    slow_chown = false

  # Metadata plugin
  [plugins."io.containerd.metadata.v1.bolt"]
    content_sharing_policy = "shared"

  # Garbage collection
  [plugins."io.containerd.gc.v1.scheduler"]
    pause_threshold = 0.02
    deletion_threshold = 0
    mutation_threshold = 100
    schedule_delay = "0s"
    startup_delay = "100ms"

  # Leases plugin
  [plugins."io.containerd.lease.v1.manager"]
    gc_policy = "immediate"

  # Linux runtime plugin
  [plugins."io.containerd.runtime.v1.linux"]
    shim = "containerd-shim"
    runtime = "runc"
    runtime_root = ""
    no_shim = false
    shim_debug = false

  # Runtime v2 plugin
  [plugins."io.containerd.runtime.v2.task"]
    platforms = ["linux/amd64", "linux/arm64"]
    sched_core = false

  # Service plugins
  [plugins."io.containerd.service.v1.containers-service"]

  [plugins."io.containerd.service.v1.content-service"]

  [plugins."io.containerd.service.v1.diff-service"]

  [plugins."io.containerd.service.v1.images-service"]

  [plugins."io.containerd.service.v1.leases-service"]

  [plugins."io.containerd.service.v1.namespaces-service"]

  [plugins."io.containerd.service.v1.snapshots-service"]

  [plugins."io.containerd.service.v1.tasks-service"]

  # Transfer service
  [plugins."io.containerd.transfer.v1.local"]

  # Internal plugins
  [plugins."io.containerd.internal.v1.restart"]
    interval = "10s"

  [plugins."io.containerd.internal.v1.opt"]
    path = "/opt/containerd"

  # Tracing configuration
  [plugins."io.containerd.tracing.processor.v1.otlp"]
    endpoint = "http://localhost:4317"
    protocol = "grpc"
    insecure = true

# Stream processors
[stream_processors]

  # OTLP processor for telemetry
  [stream_processors."io.containerd.ocicrypt.decoder.v1.jwe"]

  [stream_processors."io.containerd.transfer.v1.local"]

# Timeouts
[timeouts]
  "io.containerd.timeout.shim.cleanup" = "5s"
  "io.containerd.timeout.shim.load" = "5s"
  "io.containerd.timeout.shim.shutdown" = "3s"
  "io.containerd.timeout.task.state" = "2s"

# Proxy plugins
[proxy_plugins]

# AtlasMesh-specific configurations
[atlasmesh]
  # Vehicle identification
  vehicle_id = "${VEHICLE_ID}"
  
  # Sector configuration
  sector = "${SECTOR}"
  
  # Security level
  security_level = "high"
  
  # TPM integration
  tpm_enabled = true
  tpm_device = "/dev/tpm0"
  
  # Secure boot validation
  secure_boot_required = true
  
  # Container image verification
  image_verification_required = true
  
  # Network policies
  network_isolation = true
  
  # Resource limits for vehicle operations
  [atlasmesh.resource_limits]
    # CPU limits (in millicores)
    cpu_limit_control = 2000      # Control systems get priority
    cpu_limit_telemetry = 1000    # Telemetry processing
    cpu_limit_general = 500       # General applications
    
    # Memory limits (in MB)
    memory_limit_control = 2048   # Control systems
    memory_limit_telemetry = 1024 # Telemetry processing
    memory_limit_general = 512    # General applications
    
    # Storage limits (in MB)
    storage_limit_logs = 10240    # Log storage
    storage_limit_cache = 5120    # Cache storage
    storage_limit_temp = 2048     # Temporary files

  # Monitoring and health checks
  [atlasmesh.monitoring]
    health_check_interval = "30s"
    metrics_collection = true
    log_level = "info"
    
  # Security policies
  [atlasmesh.security]
    # Only allow signed images
    require_signed_images = true
    
    # Trusted registries
    trusted_registries = [
      "registry.atlasmesh.com",
      "gcr.io/atlasmesh-fleet-os"
    ]
    
    # Security profiles
    default_seccomp_profile = "/etc/containerd/seccomp/atlasmesh-default.json"
    default_apparmor_profile = "atlasmesh-default"
    
    # Capability restrictions
    allowed_capabilities = [
      "NET_BIND_SERVICE",
      "SYS_TIME"
    ]
    
    # Forbidden capabilities
    forbidden_capabilities = [
      "SYS_ADMIN",
      "SYS_MODULE",
      "SYS_RAWIO"
    ]
