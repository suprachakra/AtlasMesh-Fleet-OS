# AtlasMesh Fleet OS - Security Hardening Configuration
# Kernel security parameters for autonomous vehicle edge systems

# Network Security
# Disable IP forwarding (unless specifically needed for routing)
net.ipv4.ip_forward = 0
net.ipv6.conf.all.forwarding = 0

# Disable source routing
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

# Disable ICMP redirects
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

# Disable secure ICMP redirects
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# Don't send ICMP redirects
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Ignore ICMP ping requests
net.ipv4.icmp_echo_ignore_all = 0
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Ignore bogus ICMP error responses
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Enable reverse path filtering (anti-spoofing)
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# Log martian packets
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# TCP Security
# Enable SYN cookies for SYN flood protection
net.ipv4.tcp_syncookies = 1

# Disable TCP timestamps to prevent uptime detection
net.ipv4.tcp_timestamps = 0

# Enable TCP window scaling
net.ipv4.tcp_window_scaling = 1

# Increase TCP max buffer sizes
net.core.rmem_max = 134217728
net.core.wmem_max = 134217728
net.ipv4.tcp_rmem = 4096 65536 134217728
net.ipv4.tcp_wmem = 4096 65536 134217728

# TCP connection tracking
net.netfilter.nf_conntrack_max = 1048576
net.netfilter.nf_conntrack_tcp_timeout_established = 7200

# Memory Protection
# Enable ASLR (Address Space Layout Randomization)
kernel.randomize_va_space = 2

# Restrict access to kernel logs
kernel.dmesg_restrict = 1

# Restrict access to kernel pointers
kernel.kptr_restrict = 2

# Disable magic SysRq key
kernel.sysrq = 0

# Control core dumps
kernel.core_uses_pid = 1
kernel.core_pattern = |/bin/false

# Restrict ptrace to same user processes
kernel.yama.ptrace_scope = 1

# File System Security
# Restrict access to /proc
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
fs.protected_fifos = 2
fs.protected_regular = 2

# Increase inotify limits for container monitoring
fs.inotify.max_user_watches = 524288
fs.inotify.max_user_instances = 256

# Process Security
# Restrict process scheduling
kernel.sched_rt_period_us = 1000000
kernel.sched_rt_runtime_us = 950000

# Control process limits
kernel.pid_max = 4194304

# Shared Memory Security
# Restrict shared memory
kernel.shm_rmid_forced = 1

# Virtual Memory Security
# Control memory overcommit
vm.overcommit_memory = 1
vm.overcommit_ratio = 50

# Reduce swappiness for better performance
vm.swappiness = 10

# Control dirty page writeback
vm.dirty_ratio = 15
vm.dirty_background_ratio = 5

# Security Module Configuration
# Enable Yama LSM
kernel.yama.ptrace_scope = 1

# Network Buffer Tuning for High-Throughput Telemetry
# Increase network buffer sizes
net.core.netdev_max_backlog = 5000
net.core.netdev_budget = 600

# UDP buffer sizes for telemetry streaming
net.core.rmem_default = 262144
net.core.wmem_default = 262144

# TCP congestion control
net.ipv4.tcp_congestion_control = bbr

# Enable TCP fast open
net.ipv4.tcp_fastopen = 3

# Automotive-Specific Security Settings
# Disable unused network protocols
net.ipv6.conf.all.disable_ipv6 = 0  # Keep IPv6 enabled for modern networks
net.ipv6.conf.default.disable_ipv6 = 0

# CAN bus security (if applicable)
# These would be set by specific CAN drivers
# net.can.default_rx_buf_size = 65536

# Real-time Performance Tuning
# Reduce timer tick frequency impact
kernel.timer_migration = 0

# Control CPU frequency scaling
# These are typically managed by cpufreq governor
# kernel.sched_migration_cost_ns = 5000000

# Audit System Configuration
# Enable audit system
kernel.audit = 1

# Control audit buffer size
kernel.audit_backlog_limit = 8192

# Container Security
# Control user namespaces
user.max_user_namespaces = 15000

# Control PID namespaces
kernel.ns_last_pid = 1

# TPM and Hardware Security
# These settings support TPM operations
# kernel.tpm.digest_size = 32

# Logging and Monitoring
# Control kernel log buffer
kernel.printk = 3 4 1 3
kernel.printk_ratelimit = 5
kernel.printk_ratelimit_burst = 10

# Performance Monitoring
# Enable performance events
kernel.perf_event_paranoid = 2
kernel.perf_event_max_sample_rate = 100000

# Security Event Logging
# Control security event logging
kernel.audit_rate_limit = 0

# Network Performance for Vehicle Communications
# Optimize for low latency
net.ipv4.tcp_low_latency = 1

# Control TCP keepalive for persistent connections
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl = 60

# Multicast settings for V2X communications
net.ipv4.igmp_max_memberships = 20
net.ipv4.igmp_max_msf = 10

# Quality of Service
# Enable packet scheduling
net.core.default_qdisc = fq_codel

# Control network device queues
net.core.dev_weight = 64

# Emergency Response Settings
# Allow emergency override of certain restrictions
# These can be controlled via secure management interface
# kernel.emergency_override = 0

# Hardware Watchdog Support
# Enable hardware watchdog if available
# kernel.watchdog = 1
# kernel.watchdog_thresh = 10

# Secure Boot and Integrity
# Support for secure boot validation
# These are typically handled by the bootloader and kernel
# kernel.lockdown = integrity

# Final Security Hardening
# Disable kexec (prevents kernel replacement)
kernel.kexec_load_disabled = 1

# Control BPF system calls
kernel.unprivileged_bpf_disabled = 1

# Restrict userfaultfd
vm.unprivileged_userfaultfd = 0
