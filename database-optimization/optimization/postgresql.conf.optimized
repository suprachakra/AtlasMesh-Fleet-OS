# AtlasMesh Fleet OS - Optimized PostgreSQL Configuration
# Tuned for high-performance fleet management workload

# =============================================================================
# CONNECTIONS AND AUTHENTICATION
# =============================================================================

# Connection Settings
max_connections = 200                    # Reduced from default, using connection pooling
superuser_reserved_connections = 3

# Authentication
authentication_timeout = 1min
password_encryption = scram-sha-256

# SSL
ssl = on
ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'
ssl_prefer_server_ciphers = on

# =============================================================================
# RESOURCE USAGE (except WAL)
# =============================================================================

# Memory Settings (assuming 8GB RAM server)
shared_buffers = 2GB                    # 25% of RAM
huge_pages = try
temp_buffers = 8MB
work_mem = 32MB                         # Increased for complex queries
maintenance_work_mem = 512MB            # For VACUUM, CREATE INDEX, etc.
autovacuum_work_mem = 512MB
max_stack_depth = 2MB
dynamic_shared_memory_type = posix

# Effective cache size (75% of RAM)
effective_cache_size = 6GB

# Background writer
bgwriter_delay = 200ms
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0
bgwriter_flush_after = 512kB

# =============================================================================
# WRITE AHEAD LOG (WAL)
# =============================================================================

# WAL Settings
wal_level = replica                     # For streaming replication
fsync = on
synchronous_commit = on
wal_sync_method = fdatasync
full_page_writes = on
wal_compression = on
wal_buffers = 16MB                      # Increased for write-heavy workload
wal_writer_delay = 200ms
wal_writer_flush_after = 1MB

# Checkpoints
checkpoint_timeout = 15min             # Increased from default
checkpoint_completion_target = 0.9
checkpoint_flush_after = 256kB
checkpoint_warning = 30s

# Archiving (for backup and replication)
archive_mode = on
archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'
archive_timeout = 1800s                # 30 minutes

# =============================================================================
# REPLICATION
# =============================================================================

# Master Server
max_wal_senders = 10
max_replication_slots = 10
track_commit_timestamp = on
wal_keep_segments = 32
wal_sender_timeout = 60s

# Standby Server Settings
hot_standby = on
max_standby_archive_delay = 30s
max_standby_streaming_delay = 30s
wal_receiver_status_interval = 10s
hot_standby_feedback = on
wal_receiver_timeout = 60s

# =============================================================================
# QUERY TUNING
# =============================================================================

# Planner Settings
enable_bitmapscan = on
enable_hashagg = on
enable_hashjoin = on
enable_indexscan = on
enable_indexonlyscan = on
enable_material = on
enable_mergejoin = on
enable_nestloop = on
enable_seqscan = on
enable_sort = on
enable_tidscan = on

# Planner Cost Constants
seq_page_cost = 1.0
random_page_cost = 1.1                 # Lower for SSD storage
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025
parallel_tuple_cost = 0.1
parallel_setup_cost = 1000.0
min_parallel_table_scan_size = 8MB
min_parallel_index_scan_size = 512kB

# Genetic Query Optimizer
geqo = on
geqo_threshold = 12
geqo_effort = 5
geqo_pool_size = 0
geqo_generations = 0
geqo_selection_bias = 2.0
geqo_seed = 0.0

# Other Planner Options
default_statistics_target = 100        # Increased for better query plans
constraint_exclusion = partition
cursor_tuple_fraction = 0.1
from_collapse_limit = 8
join_collapse_limit = 8
force_parallel_mode = off

# =============================================================================
# ERROR REPORTING AND LOGGING
# =============================================================================

# Where to Log
log_destination = 'stderr'
logging_collector = on
log_directory = '/var/log/postgresql'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_file_mode = 0600
log_truncate_on_rotation = off
log_rotation_age = 1d
log_rotation_size = 100MB

# When to Log
log_min_messages = warning
log_min_error_statement = error
log_min_duration_statement = 1000      # Log slow queries (1 second)

# What to Log
debug_print_parse = off
debug_print_rewritten = off
debug_print_plan = off
debug_pretty_print = on
log_checkpoints = on
log_connections = on
log_disconnections = on
log_duration = off
log_error_verbosity = default
log_hostname = off
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_lock_waits = on
log_statement = 'ddl'                  # Log DDL statements
log_replication_commands = on
log_temp_files = 10MB                  # Log temp files larger than 10MB
log_timezone = 'UTC'

# =============================================================================
# RUNTIME STATISTICS
# =============================================================================

# Query/Index Statistics Collector
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all
track_activity_query_size = 1024
stats_temp_directory = '/var/run/postgresql/stats_temp'

# Statistics Monitoring
log_parser_stats = off
log_planner_stats = off
log_executor_stats = off
log_statement_stats = off

# =============================================================================
# AUTOVACUUM PARAMETERS
# =============================================================================

# Autovacuum
autovacuum = on
log_autovacuum_min_duration = 0
autovacuum_max_workers = 4              # Increased for better maintenance
autovacuum_naptime = 30s                # More frequent runs
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1    # More aggressive vacuuming
autovacuum_analyze_scale_factor = 0.05  # More frequent analyze
autovacuum_freeze_max_age = 200000000
autovacuum_multixact_freeze_max_age = 400000000
autovacuum_vacuum_cost_delay = 10ms     # Reduced delay for faster vacuum
autovacuum_vacuum_cost_limit = 1000     # Increased limit

# =============================================================================
# CLIENT CONNECTION DEFAULTS
# =============================================================================

# Statement Behavior
search_path = '"$user", public'
default_tablespace = ''
temp_tablespaces = ''
check_function_bodies = on
default_transaction_isolation = 'read committed'
default_transaction_read_only = off
default_transaction_deferrable = off
session_replication_role = 'origin'
statement_timeout = 300s                # 5 minute timeout for long queries
lock_timeout = 30s                      # Timeout for lock waits
idle_in_transaction_session_timeout = 600s  # 10 minute timeout for idle transactions
vacuum_freeze_min_age = 50000000
vacuum_freeze_table_age = 150000000
vacuum_multixact_freeze_min_age = 5000000
vacuum_multixact_freeze_table_age = 150000000
bytea_output = 'hex'
xmlbinary = 'base64'
xmloption = 'content'
gin_fuzzy_search_limit = 0
gin_pending_list_limit = 4MB

# Locale and Formatting
datestyle = 'iso, mdy'
intervalstyle = 'postgres'
timezone = 'UTC'
timezone_abbreviations = 'Default'
extra_float_digits = 0
client_encoding = utf8

# =============================================================================
# LOCK MANAGEMENT
# =============================================================================

deadlock_timeout = 1s
max_locks_per_transaction = 64
max_pred_locks_per_transaction = 64
max_pred_locks_per_relation = -2
max_pred_locks_per_page = 2

# =============================================================================
# VERSION/PLATFORM COMPATIBILITY
# =============================================================================

array_nulls = on
backslash_quote = safe_encoding
default_with_oids = off
escape_string_warning = on
lo_compat_privileges = off
operator_precedence_warning = off
quote_all_identifiers = off
sql_inheritance = on
standard_conforming_strings = on
synchronize_seqscans = on
transform_null_equals = off

# =============================================================================
# ERROR HANDLING
# =============================================================================

exit_on_error = off
restart_after_crash = on

# =============================================================================
# CONFIG FILE INCLUDES
# =============================================================================

# Include files
#include_dir = 'conf.d'
#include_if_exists = 'exists.conf'
#include = 'special.conf'

# =============================================================================
# CUSTOMIZED OPTIONS FOR ATLASMESH FLEET OS
# =============================================================================

# Custom settings for fleet management workload
shared_preload_libraries = 'pg_stat_statements,auto_explain,pg_cron'

# pg_stat_statements configuration
pg_stat_statements.max = 10000
pg_stat_statements.track = all
pg_stat_statements.track_utility = on
pg_stat_statements.save = on

# auto_explain configuration (for debugging slow queries)
auto_explain.log_min_duration = 5s
auto_explain.log_analyze = on
auto_explain.log_buffers = on
auto_explain.log_timing = on
auto_explain.log_triggers = on
auto_explain.log_verbose = on
auto_explain.log_nested_statements = on

# pg_cron configuration (for scheduled tasks)
cron.database_name = 'atlasmesh_fleet_os'

# JIT compilation (PostgreSQL 11+)
jit = on
jit_above_cost = 100000
jit_inline_above_cost = 500000
jit_optimize_above_cost = 500000

# Parallel query settings
max_parallel_workers_per_gather = 4
max_parallel_maintenance_workers = 4
max_parallel_workers = 8
parallel_leader_participation = on

# Partitioning
enable_partition_pruning = on
enable_partitionwise_join = on
enable_partitionwise_aggregate = on

# =============================================================================
# MONITORING AND ALERTING THRESHOLDS
# =============================================================================

# These are custom parameters for monitoring scripts
# (Not actual PostgreSQL parameters, but configuration for monitoring tools)

# Connection monitoring
# max_connections_warning_threshold = 160  # 80% of max_connections
# max_connections_critical_threshold = 180 # 90% of max_connections

# Query performance monitoring  
# slow_query_threshold = 5000              # 5 seconds
# very_slow_query_threshold = 30000        # 30 seconds

# Lock monitoring
# lock_wait_warning_threshold = 10000      # 10 seconds
# lock_wait_critical_threshold = 60000     # 60 seconds

# Disk space monitoring
# disk_usage_warning_threshold = 80        # 80% full
# disk_usage_critical_threshold = 90       # 90% full

# Replication lag monitoring
# replication_lag_warning_threshold = 60   # 60 seconds
# replication_lag_critical_threshold = 300 # 5 minutes
