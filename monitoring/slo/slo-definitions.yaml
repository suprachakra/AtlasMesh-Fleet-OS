# AtlasMesh Fleet OS - Service Level Objectives (SLO) Definitions
# This file defines all SLOs, SLIs, and error budgets for the fleet management system

metadata:
  version: "1.0.0"
  last_updated: "2024-01-01T00:00:00Z"
  owner: "AtlasMesh SRE Team"
  description: "Comprehensive SLO definitions for AtlasMesh Fleet OS"

# Global SLO Configuration
global:
  measurement_window: "30d"  # 30-day rolling window
  error_budget_burn_rate_threshold: 2.0  # Alert when burning budget 2x faster than sustainable
  slo_alerting_enabled: true
  dashboard_refresh_interval: "30s"

# Service Level Objectives
slos:
  # Fleet Availability SLOs
  fleet_availability:
    name: "Fleet Availability"
    description: "Percentage of time vehicles are operational and available for dispatch"
    objective: 99.5  # 99.5% availability
    sli:
      metric: "fleet_availability_ratio"
      query: |
        sum(rate(atlasmesh_vehicle_uptime_total[5m])) / 
        sum(rate(atlasmesh_vehicle_total[5m]))
    error_budget:
      total_minutes_per_month: 216  # 0.5% of 30 days = 216 minutes
      burn_rate_alerts:
        - threshold: 14.4  # 1 hour at this rate burns 10% of monthly budget
          severity: "critical"
          duration: "2m"
        - threshold: 6.0   # 6 hours at this rate burns 10% of monthly budget
          severity: "warning"
          duration: "15m"
    sectors:
      defense: 99.9    # Higher availability requirement for defense
      mining: 99.5     # Standard availability
      logistics: 99.5  # Standard availability
      ridehail: 99.0   # Slightly lower for ride-hail due to urban complexity

  # Performance SLOs
  control_loop_latency:
    name: "Vehicle Control Loop Latency"
    description: "95th percentile latency of vehicle control loop execution"
    objective: 50  # 50ms P95 latency
    unit: "milliseconds"
    sli:
      metric: "control_loop_latency_p95"
      query: |
        histogram_quantile(0.95, 
          sum(rate(atlasmesh_control_loop_duration_seconds_bucket[5m])) by (le)
        ) * 1000
    error_budget:
      total_violations_per_month: 1080  # 0.5% of measurements can exceed threshold
      burn_rate_alerts:
        - threshold: 10.0
          severity: "critical"
          duration: "2m"
        - threshold: 5.0
          severity: "warning"
          duration: "10m"

  policy_evaluation_latency:
    name: "Policy Evaluation Latency"
    description: "99th percentile latency of policy evaluation"
    objective: 10  # 10ms P99 latency
    unit: "milliseconds"
    sli:
      metric: "policy_evaluation_latency_p99"
      query: |
        histogram_quantile(0.99, 
          sum(rate(atlasmesh_policy_evaluation_duration_seconds_bucket[5m])) by (le)
        ) * 1000
    error_budget:
      total_violations_per_month: 216  # 0.1% of measurements can exceed threshold
      burn_rate_alerts:
        - threshold: 20.0
          severity: "critical"
          duration: "1m"
        - threshold: 10.0
          severity: "warning"
          duration: "5m"

  route_calculation_latency:
    name: "Route Calculation Latency"
    description: "95th percentile latency of route calculation"
    objective: 5000  # 5 seconds P95 latency
    unit: "milliseconds"
    sli:
      metric: "route_calculation_latency_p95"
      query: |
        histogram_quantile(0.95, 
          sum(rate(atlasmesh_route_calculation_duration_seconds_bucket[5m])) by (le)
        ) * 1000
    error_budget:
      total_violations_per_month: 1080  # 0.5% of calculations can exceed threshold
      burn_rate_alerts:
        - threshold: 8.0
          severity: "critical"
          duration: "5m"
        - threshold: 4.0
          severity: "warning"
          duration: "15m"

  # Data Quality SLOs
  telemetry_completeness:
    name: "Telemetry Data Completeness"
    description: "Percentage of expected telemetry messages successfully received"
    objective: 99.9  # 99.9% completeness
    sli:
      metric: "telemetry_completeness_ratio"
      query: |
        sum(rate(atlasmesh_telemetry_messages_received_total[5m])) / 
        sum(rate(atlasmesh_telemetry_messages_expected_total[5m]))
    error_budget:
      total_missing_messages_per_month: 2160  # 0.1% of messages can be missing
      burn_rate_alerts:
        - threshold: 50.0
          severity: "critical"
          duration: "1m"
        - threshold: 10.0
          severity: "warning"
          duration: "5m"

  schema_validation_success:
    name: "Schema Validation Success Rate"
    description: "Percentage of telemetry messages that pass schema validation"
    objective: 99.95  # 99.95% validation success
    sli:
      metric: "schema_validation_success_ratio"
      query: |
        sum(rate(atlasmesh_schema_validation_success_total[5m])) / 
        sum(rate(atlasmesh_schema_validation_total[5m]))
    error_budget:
      total_validation_failures_per_month: 1080  # 0.05% of validations can fail
      burn_rate_alerts:
        - threshold: 100.0
          severity: "critical"
          duration: "30s"
        - threshold: 20.0
          severity: "warning"
          duration: "2m"

  # API Reliability SLOs
  api_success_rate:
    name: "API Success Rate"
    description: "Percentage of API requests that return successful responses (2xx, 3xx)"
    objective: 99.9  # 99.9% success rate
    sli:
      metric: "api_success_rate"
      query: |
        sum(rate(atlasmesh_http_requests_total{code!~"5.."}[5m])) / 
        sum(rate(atlasmesh_http_requests_total[5m]))
    error_budget:
      total_failed_requests_per_month: 2160  # 0.1% of requests can fail
      burn_rate_alerts:
        - threshold: 20.0
          severity: "critical"
          duration: "2m"
        - threshold: 10.0
          severity: "warning"
          duration: "10m"

  api_latency:
    name: "API Response Latency"
    description: "95th percentile latency of API responses"
    objective: 500  # 500ms P95 latency
    unit: "milliseconds"
    sli:
      metric: "api_latency_p95"
      query: |
        histogram_quantile(0.95, 
          sum(rate(atlasmesh_http_request_duration_seconds_bucket[5m])) by (le)
        ) * 1000
    error_budget:
      total_slow_requests_per_month: 1080  # 0.5% of requests can be slow
      burn_rate_alerts:
        - threshold: 15.0
          severity: "critical"
          duration: "2m"
        - threshold: 8.0
          severity: "warning"
          duration: "10m"

  # Security SLOs
  authentication_success_rate:
    name: "Authentication Success Rate"
    description: "Percentage of authentication attempts that succeed (excluding invalid credentials)"
    objective: 99.5  # 99.5% success rate
    sli:
      metric: "auth_success_rate"
      query: |
        sum(rate(atlasmesh_auth_attempts_total{result="success"}[5m])) / 
        sum(rate(atlasmesh_auth_attempts_total{result!="invalid_credentials"}[5m]))
    error_budget:
      total_auth_failures_per_month: 1080  # 0.5% of valid attempts can fail
      burn_rate_alerts:
        - threshold: 10.0
          severity: "critical"
          duration: "1m"
        - threshold: 5.0
          severity: "warning"
          duration: "5m"

  # Data Pipeline SLOs
  kafka_message_delivery:
    name: "Kafka Message Delivery Success Rate"
    description: "Percentage of messages successfully delivered to Kafka topics"
    objective: 99.99  # 99.99% delivery success
    sli:
      metric: "kafka_delivery_success_rate"
      query: |
        sum(rate(atlasmesh_kafka_messages_delivered_total[5m])) / 
        sum(rate(atlasmesh_kafka_messages_sent_total[5m]))
    error_budget:
      total_failed_deliveries_per_month: 216  # 0.01% of messages can fail delivery
      burn_rate_alerts:
        - threshold: 50.0
          severity: "critical"
          duration: "30s"
        - threshold: 20.0
          severity: "warning"
          duration: "2m"

  data_processing_latency:
    name: "Data Processing End-to-End Latency"
    description: "95th percentile latency from telemetry ingestion to storage"
    objective: 2000  # 2 seconds P95 latency
    unit: "milliseconds"
    sli:
      metric: "data_processing_latency_p95"
      query: |
        histogram_quantile(0.95, 
          sum(rate(atlasmesh_data_processing_duration_seconds_bucket[5m])) by (le)
        ) * 1000
    error_budget:
      total_slow_processing_per_month: 1080  # 0.5% of processing can be slow
      burn_rate_alerts:
        - threshold: 12.0
          severity: "critical"
          duration: "2m"
        - threshold: 6.0
          severity: "warning"
          duration: "10m"

# Service Level Indicators (SLI) Definitions
slis:
  # Custom SLI calculations
  fleet_operational_efficiency:
    name: "Fleet Operational Efficiency"
    description: "Ratio of productive vehicle time to total operational time"
    query: |
      sum(rate(atlasmesh_vehicle_productive_time_total[5m])) / 
      sum(rate(atlasmesh_vehicle_operational_time_total[5m]))
    unit: "ratio"
    target: 0.85  # 85% efficiency target

  incident_resolution_time:
    name: "Mean Time to Resolution (MTTR)"
    description: "Average time to resolve critical incidents"
    query: |
      sum(atlasmesh_incident_resolution_duration_seconds_sum) / 
      sum(atlasmesh_incident_resolution_duration_seconds_count)
    unit: "seconds"
    target: 900  # 15 minutes target MTTR

  data_freshness:
    name: "Data Freshness"
    description: "Age of the most recent telemetry data per vehicle"
    query: |
      time() - max(atlasmesh_vehicle_last_telemetry_timestamp) by (vehicle_id)
    unit: "seconds"
    target: 30  # Data should be no older than 30 seconds

# Error Budget Policies
error_budget_policies:
  - name: "Critical SLO Breach"
    condition: "error_budget_remaining < 0.1"  # Less than 10% budget remaining
    actions:
      - "page_oncall"
      - "create_incident"
      - "escalate_to_engineering"
    
  - name: "Fast Burn Rate"
    condition: "error_budget_burn_rate > 10"  # Burning budget 10x faster than sustainable
    actions:
      - "alert_team"
      - "auto_rollback_if_recent_deployment"
      - "throttle_non_critical_operations"

  - name: "Slow Burn Rate"
    condition: "error_budget_burn_rate > 2 AND error_budget_burn_rate <= 10"
    actions:
      - "notify_team"
      - "schedule_investigation"

# Alerting Configuration
alerting:
  notification_channels:
    - name: "sre_team"
      type: "slack"
      webhook_url: "${SLACK_SRE_WEBHOOK}"
      
    - name: "oncall_pager"
      type: "pagerduty"
      integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
      
    - name: "engineering_team"
      type: "email"
      recipients: ["engineering@atlasmesh.com"]

  alert_rules:
    - name: "SLO Error Budget Exhaustion"
      condition: "error_budget_remaining < 0.05"  # Less than 5% remaining
      severity: "critical"
      channels: ["oncall_pager", "sre_team"]
      
    - name: "SLO Fast Burn Rate"
      condition: "error_budget_burn_rate > 14.4"  # Will exhaust budget in 2 hours
      severity: "critical"
      channels: ["oncall_pager", "sre_team"]
      
    - name: "SLO Moderate Burn Rate"
      condition: "error_budget_burn_rate > 6.0"  # Will exhaust budget in 5 hours
      severity: "warning"
      channels: ["sre_team"]

# Reporting Configuration
reporting:
  monthly_slo_report:
    enabled: true
    recipients: ["leadership@atlasmesh.com", "engineering@atlasmesh.com"]
    include_sections:
      - "slo_compliance_summary"
      - "error_budget_consumption"
      - "top_reliability_risks"
      - "improvement_recommendations"
  
  weekly_sli_trends:
    enabled: true
    recipients: ["sre@atlasmesh.com", "engineering@atlasmesh.com"]
    include_sections:
      - "sli_trend_analysis"
      - "performance_regressions"
      - "capacity_planning_insights"

# Integration Configuration
integrations:
  prometheus:
    url: "http://prometheus:9090"
    query_timeout: "30s"
    
  grafana:
    url: "http://grafana:3000"
    dashboard_folder: "SLO Monitoring"
    
  incident_management:
    provider: "pagerduty"
    auto_create_incidents: true
    incident_priority_mapping:
      critical: "P1"
      warning: "P2"
      info: "P3"
