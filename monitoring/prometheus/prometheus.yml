# AtlasMesh Fleet OS - Prometheus Configuration
# Comprehensive monitoring for Abu Dhabi autonomous vehicle fleet operations
# Scrapes metrics from all microservices, infrastructure, and edge devices

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'atlasmesh-abu-dhabi'
    region: 'uae-central'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  - "rules/*.yml"

# Scrape configuration for AtlasMesh Fleet OS services
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # API Gateway
  - job_name: 'api-gateway'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: api-gateway-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 10s
    metrics_path: /metrics

  # Fleet Manager
  - job_name: 'fleet-manager'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: fleet-manager-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 10s
    metrics_path: /metrics

  # Policy Engine
  - job_name: 'policy-engine'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: policy-engine-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 5s  # Higher frequency for policy decisions
    metrics_path: /metrics

  # Vehicle Gateway
  - job_name: 'vehicle-gateway'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: vehicle-gateway-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 5s  # High frequency for real-time vehicle data
    metrics_path: /metrics

  # Telemetry Ingestion
  - job_name: 'telemetry-ingestion'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: telemetry-ingestion-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 5s
    metrics_path: /metrics

  # Map Data Contract Service
  - job_name: 'map-data-contract'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: map-data-contract-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 15s
    metrics_path: /metrics

  # Weather Fusion Service
  - job_name: 'weather-fusion'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: weather-fusion-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 30s
    metrics_path: /metrics

  # Control Center UI
  - job_name: 'control-center-ui'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: control-center-ui-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 30s
    metrics_path: /metrics

  # Infrastructure Components
  
  # PostgreSQL
  - job_name: 'postgresql'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: postgresql-metrics
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 30s

  # Redis
  - job_name: 'redis'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: redis-metrics
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 30s

  # Kafka
  - job_name: 'kafka'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: kafka-metrics
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: metrics
    scrape_interval: 30s

  # Kubernetes API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - atlasmesh-fleet-os
            - atlasmesh-fleet-os-staging
            - atlasmesh-fleet-os-dev
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Edge Devices (Vehicle Onboard Computers)
  - job_name: 'edge-devices'
    static_configs:
      # These would be dynamically discovered in production
      - targets:
          - 'vehicle-001.fleet.atlasmesh.local:9100'
          - 'vehicle-002.fleet.atlasmesh.local:9100'
          - 'vehicle-003.fleet.atlasmesh.local:9100'
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        regex: '([^:]+):.*'
        target_label: vehicle_id
        replacement: '${1}'
      - target_label: location
        replacement: 'abu_dhabi'
      - target_label: device_type
        replacement: 'edge_computer'

  # Abu Dhabi Specific Infrastructure
  - job_name: 'traffic-management-system'
    static_configs:
      - targets:
          - 'tms.abu-dhabi.gov.ae:9100'
    scrape_interval: 60s
    scrape_timeout: 30s
    metrics_path: /api/metrics
    basic_auth:
      username: 'atlasmesh'
      password_file: /etc/prometheus/secrets/tms_password
    relabel_configs:
      - target_label: source
        replacement: 'abu_dhabi_tms'

  # Weather Stations
  - job_name: 'weather-stations'
    static_configs:
      - targets:
          - 'weather-01.abu-dhabi.local:9100'
          - 'weather-02.abu-dhabi.local:9100'
          - 'weather-03.abu-dhabi.local:9100'
    scrape_interval: 120s
    metrics_path: /weather/metrics
    relabel_configs:
      - target_label: location
        replacement: 'abu_dhabi'
      - target_label: data_type
        replacement: 'weather'

  # Network Infrastructure
  - job_name: 'network-equipment'
    static_configs:
      - targets:
          - 'router-01.fleet.atlasmesh.local:9100'
          - 'router-02.fleet.atlasmesh.local:9100'
          - 'switch-01.fleet.atlasmesh.local:9100'
          - 'switch-02.fleet.atlasmesh.local:9100'
    scrape_interval: 60s
    metrics_path: /snmp
    params:
      module: [if_mib]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: snmp-exporter:9116

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.atlasmesh.com/api/v1/write"
    basic_auth:
      username: "atlasmesh"
      password_file: "/etc/prometheus/secrets/remote_write_password"
    queue_config:
      max_samples_per_send: 10000
      max_shards: 200
      capacity: 100000
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'atlasmesh_.*'
        action: keep

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 100GB
    path: /prometheus/data
    wal-compression: true