# AtlasMesh Fleet OS - Redis Cluster Configuration
# High-performance caching with Redis Cluster for scalability and fault tolerance

version: '3.8'

services:
  # Redis Cluster Nodes
  redis-node-1:
    image: redis:7.2-alpine
    container_name: redis-node-1
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes-6379.conf --cluster-node-timeout 5000 --appendonly yes --port 6379
    ports:
      - "6379:6379"
      - "16379:16379"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-1-data:/data
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-node-2:
    image: redis:7.2-alpine
    container_name: redis-node-2
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes-6380.conf --cluster-node-timeout 5000 --appendonly yes --port 6380
    ports:
      - "6380:6380"
      - "16380:16380"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-2-data:/data
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-node-3:
    image: redis:7.2-alpine
    container_name: redis-node-3
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes-6381.conf --cluster-node-timeout 5000 --appendonly yes --port 6381
    ports:
      - "6381:6381"
      - "16381:16381"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-3-data:/data
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6381", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-node-4:
    image: redis:7.2-alpine
    container_name: redis-node-4
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes-6382.conf --cluster-node-timeout 5000 --appendonly yes --port 6382
    ports:
      - "6382:6382"
      - "16382:16382"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-4-data:/data
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6382", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-node-5:
    image: redis:7.2-alpine
    container_name: redis-node-5
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes-6383.conf --cluster-node-timeout 5000 --appendonly yes --port 6383
    ports:
      - "6383:6383"
      - "16383:16383"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-5-data:/data
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6383", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-node-6:
    image: redis:7.2-alpine
    container_name: redis-node-6
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --cluster-config-file nodes-6384.conf --cluster-node-timeout 5000 --appendonly yes --port 6384
    ports:
      - "6384:6384"
      - "16384:16384"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-6-data:/data
    networks:
      - redis-cluster
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6384", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cluster Initialization
  redis-cluster-init:
    image: redis:7.2-alpine
    container_name: redis-cluster-init
    command: >
      sh -c "
        sleep 10 &&
        redis-cli --cluster create 
        redis-node-1:6379 
        redis-node-2:6380 
        redis-node-3:6381 
        redis-node-4:6382 
        redis-node-5:6383 
        redis-node-6:6384 
        --cluster-replicas 1 
        --cluster-yes
      "
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
    networks:
      - redis-cluster

  # Redis Sentinel for High Availability
  redis-sentinel-1:
    image: redis:7.2-alpine
    container_name: redis-sentinel-1
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    ports:
      - "26379:26379"
    volumes:
      - ./redis-sentinel.conf:/usr/local/etc/redis/sentinel.conf
    networks:
      - redis-cluster
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
    restart: unless-stopped

  redis-sentinel-2:
    image: redis:7.2-alpine
    container_name: redis-sentinel-2
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    ports:
      - "26380:26379"
    volumes:
      - ./redis-sentinel.conf:/usr/local/etc/redis/sentinel.conf
    networks:
      - redis-cluster
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
    restart: unless-stopped

  redis-sentinel-3:
    image: redis:7.2-alpine
    container_name: redis-sentinel-3
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    ports:
      - "26381:26379"
    volumes:
      - ./redis-sentinel.conf:/usr/local/etc/redis/sentinel.conf
    networks:
      - redis-cluster
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
    restart: unless-stopped

  # Redis Insight for Monitoring
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: redis-insight
    ports:
      - "8001:8001"
    volumes:
      - redis-insight-data:/db
    networks:
      - redis-cluster
    restart: unless-stopped
    environment:
      - RIPORT=8001

  # HAProxy for Load Balancing Redis Connections
  redis-haproxy:
    image: haproxy:2.8-alpine
    container_name: redis-haproxy
    ports:
      - "6380:6380"
      - "8404:8404"  # HAProxy stats
    volumes:
      - ./haproxy-redis.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - redis-cluster
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
    restart: unless-stopped

volumes:
  redis-node-1-data:
    driver: local
  redis-node-2-data:
    driver: local
  redis-node-3-data:
    driver: local
  redis-node-4-data:
    driver: local
  redis-node-5-data:
    driver: local
  redis-node-6-data:
    driver: local
  redis-insight-data:
    driver: local

networks:
  redis-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
