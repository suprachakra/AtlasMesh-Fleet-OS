# AtlasMesh Fleet OS - ClickHouse Data Warehouse & OLAP
# Optimized for fleet analytics, data marts, OLAP cubes, and business intelligence

version: '3.8'

services:
  # ClickHouse Cluster Nodes
  clickhouse-01:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: clickhouse-01
    hostname: clickhouse-01
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
      - "9009:9009"  # Inter-server communication
    volumes:
      - ./config/clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./config/users.xml:/etc/clickhouse-server/users.xml
      - ./config/macros.xml:/etc/clickhouse-server/config.d/macros.xml
      - clickhouse-01-data:/var/lib/clickhouse
      - clickhouse-01-logs:/var/log/clickhouse-server
    environment:
      - CLICKHOUSE_DB=atlasmesh_analytics
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
    networks:
      - clickhouse-cluster
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  clickhouse-02:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: clickhouse-02
    hostname: clickhouse-02
    ports:
      - "8124:8123"
      - "9001:9000"
      - "9010:9009"
    volumes:
      - ./config/clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./config/users.xml:/etc/clickhouse-server/users.xml
      - ./config/macros-02.xml:/etc/clickhouse-server/config.d/macros.xml
      - clickhouse-02-data:/var/lib/clickhouse
      - clickhouse-02-logs:/var/log/clickhouse-server
    environment:
      - CLICKHOUSE_DB=atlasmesh_analytics
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
    networks:
      - clickhouse-cluster
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  clickhouse-03:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: clickhouse-03
    hostname: clickhouse-03
    ports:
      - "8125:8123"
      - "9002:9000"
      - "9011:9009"
    volumes:
      - ./config/clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./config/users.xml:/etc/clickhouse-server/users.xml
      - ./config/macros-03.xml:/etc/clickhouse-server/config.d/macros.xml
      - clickhouse-03-data:/var/lib/clickhouse
      - clickhouse-03-logs:/var/log/clickhouse-server
    environment:
      - CLICKHOUSE_DB=atlasmesh_analytics
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
    networks:
      - clickhouse-cluster
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # ClickHouse Keeper (ZooKeeper replacement)
  clickhouse-keeper-01:
    image: clickhouse/clickhouse-keeper:23.8-alpine
    container_name: clickhouse-keeper-01
    hostname: clickhouse-keeper-01
    ports:
      - "9181:9181"
    volumes:
      - ./config/keeper-config.xml:/etc/clickhouse-keeper/keeper_config.xml
      - clickhouse-keeper-01-data:/var/lib/clickhouse-keeper
      - clickhouse-keeper-01-logs:/var/log/clickhouse-keeper
    networks:
      - clickhouse-cluster
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "9181"]
      interval: 30s
      timeout: 10s
      retries: 3

  clickhouse-keeper-02:
    image: clickhouse/clickhouse-keeper:23.8-alpine
    container_name: clickhouse-keeper-02
    hostname: clickhouse-keeper-02
    ports:
      - "9182:9181"
    volumes:
      - ./config/keeper-config-02.xml:/etc/clickhouse-keeper/keeper_config.xml
      - clickhouse-keeper-02-data:/var/lib/clickhouse-keeper
      - clickhouse-keeper-02-logs:/var/log/clickhouse-keeper
    networks:
      - clickhouse-cluster
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "9181"]
      interval: 30s
      timeout: 10s
      retries: 3

  clickhouse-keeper-03:
    image: clickhouse/clickhouse-keeper:23.8-alpine
    container_name: clickhouse-keeper-03
    hostname: clickhouse-keeper-03
    ports:
      - "9183:9181"
    volumes:
      - ./config/keeper-config-03.xml:/etc/clickhouse-keeper/keeper_config.xml
      - clickhouse-keeper-03-data:/var/lib/clickhouse-keeper
      - clickhouse-keeper-03-logs:/var/log/clickhouse-keeper
    networks:
      - clickhouse-cluster
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "9181"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Warehouse ETL Service
  dw-etl-service:
    build:
      context: .
      dockerfile: Dockerfile.dw-etl
    container_name: dw-etl-service
    environment:
      - CLICKHOUSE_HOST=clickhouse-01
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DB=atlasmesh_analytics
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-atlasmesh_fleet_os}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - KAFKA_BROKERS=${KAFKA_BROKERS:-kafka:9092}
      - ETL_SCHEDULE=${ETL_SCHEDULE:-*/15 * * * *}  # Every 15 minutes
    volumes:
      - ./sql/data-marts:/app/sql/data-marts
      - ./sql/olap-cubes:/app/sql/olap-cubes
      - etl-logs:/app/logs
    networks:
      - clickhouse-cluster
    ports:
      - "8094:8080"
    restart: unless-stopped
    depends_on:
      - clickhouse-01
      - clickhouse-02
      - clickhouse-03
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OLAP Query Service
  olap-query-service:
    build:
      context: .
      dockerfile: Dockerfile.olap-query
    container_name: olap-query-service
    environment:
      - CLICKHOUSE_HOST=clickhouse-01
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DB=atlasmesh_analytics
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CACHE_TTL=${CACHE_TTL:-300}  # 5 minutes
    volumes:
      - ./sql/olap-queries:/app/sql/queries
      - olap-logs:/app/logs
    networks:
      - clickhouse-cluster
    ports:
      - "8095:8080"
    restart: unless-stopped
    depends_on:
      - clickhouse-01
      - dw-etl-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Business Intelligence Service
  bi-service:
    build:
      context: .
      dockerfile: Dockerfile.bi-service
    container_name: bi-service
    environment:
      - CLICKHOUSE_HOST=clickhouse-01
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DB=atlasmesh_analytics
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./config/bi-dashboards:/app/dashboards
      - ./config/bi-reports:/app/reports
      - bi-logs:/app/logs
    networks:
      - clickhouse-cluster
    ports:
      - "8096:8080"
    restart: unless-stopped
    depends_on:
      - clickhouse-01
      - olap-query-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Mart Manager
  data-mart-manager:
    build:
      context: .
      dockerfile: Dockerfile.data-mart-manager
    container_name: data-mart-manager
    environment:
      - CLICKHOUSE_HOST=clickhouse-01
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DB=atlasmesh_analytics
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
      - REFRESH_SCHEDULE=${MART_REFRESH_SCHEDULE:-0 */2 * * *}  # Every 2 hours
    volumes:
      - ./sql/data-marts:/app/sql/data-marts
      - ./config/mart-definitions:/app/config/marts
      - mart-logs:/app/logs
    networks:
      - clickhouse-cluster
    ports:
      - "8097:8080"
    restart: unless-stopped
    depends_on:
      - clickhouse-01
      - dw-etl-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ClickHouse Proxy/Load Balancer
  clickhouse-proxy:
    image: haproxy:2.8-alpine
    container_name: clickhouse-proxy
    ports:
      - "8126:8123"  # HTTP interface
      - "9003:9000"  # Native interface
      - "8405:8404"  # HAProxy stats
    volumes:
      - ./config/haproxy-clickhouse.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - clickhouse-cluster
    depends_on:
      - clickhouse-01
      - clickhouse-02
      - clickhouse-03
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8404/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring and Metrics
  clickhouse-exporter:
    image: f1yegor/clickhouse-exporter:latest
    container_name: clickhouse-exporter
    ports:
      - "9116:9116"
    environment:
      - CLICKHOUSE_URL=http://clickhouse-01:8123/
      - CLICKHOUSE_USER=analytics_user
      - CLICKHOUSE_PASSWORD=analytics_password_2024!
    networks:
      - clickhouse-cluster
    depends_on:
      - clickhouse-01
    restart: unless-stopped

  # Grafana for ClickHouse Monitoring
  grafana-clickhouse:
    image: grafana/grafana:10.1.0
    container_name: grafana-clickhouse
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password_2024!
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource,vertamedia-clickhouse-datasource
    volumes:
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - grafana-clickhouse-data:/var/lib/grafana
    networks:
      - clickhouse-cluster
    depends_on:
      - clickhouse-01
    restart: unless-stopped

volumes:
  clickhouse-01-data:
    driver: local
  clickhouse-01-logs:
    driver: local
  clickhouse-02-data:
    driver: local
  clickhouse-02-logs:
    driver: local
  clickhouse-03-data:
    driver: local
  clickhouse-03-logs:
    driver: local
  clickhouse-keeper-01-data:
    driver: local
  clickhouse-keeper-01-logs:
    driver: local
  clickhouse-keeper-02-data:
    driver: local
  clickhouse-keeper-02-logs:
    driver: local
  clickhouse-keeper-03-data:
    driver: local
  clickhouse-keeper-03-logs:
    driver: local
  etl-logs:
    driver: local
  olap-logs:
    driver: local
  bi-logs:
    driver: local
  mart-logs:
    driver: local
  grafana-clickhouse-data:
    driver: local

networks:
  clickhouse-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16
