openapi: 3.0.3
info:
  title: AtlasMesh Trip Service API
  description: |
    Trip lifecycle management service for AtlasMesh Fleet OS.
    
    Handles the complete lifecycle of trips from creation to completion,
    including route assignment, status tracking, and trip analytics.
    
    ## Authentication
    All endpoints require Bearer token authentication via the `Authorization` header.
    
    ## Rate Limits
    - Standard endpoints: 1000 requests/minute
    - Bulk operations: 100 requests/minute
    
    ## Versioning
    This API uses semantic versioning. The current version is specified in the URL path.
    Breaking changes will increment the major version number.
  version: 2.0.0
  contact:
    name: AtlasMesh API Team
    email: api-team@atlasmesh.com
    url: https://docs.atlasmesh.com
  license:
    name: Proprietary
    url: https://atlasmesh.com/license
  termsOfService: https://atlasmesh.com/terms

servers:
  - url: http://mission-management:8080/api/v1
    description: Internal service endpoint
  - url: https://api.atlasmesh.com/trip/v1
    description: Production API endpoint
  - url: https://api-staging.atlasmesh.com/trip/v1
    description: Staging API endpoint

security:
  - BearerAuth: []

paths:
  /trips:
    get:
      summary: List trips
      description: Retrieve a paginated list of trips with optional filtering
      operationId: listTrips
      tags:
        - Trips
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/SortParam'
        - name: status
          in: query
          description: Filter by trip status
          schema:
            $ref: '#/components/schemas/TripStatus'
        - name: vehicle_id
          in: query
          description: Filter by vehicle ID
          schema:
            type: string
            format: uuid
        - name: sector
          in: query
          description: Filter by sector
          schema:
            $ref: '#/components/schemas/Sector'
        - name: created_after
          in: query
          description: Filter trips created after this timestamp
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          description: Filter trips created before this timestamp
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of trips retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  trips:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trip'
                  pagination:
                    $ref: '#/components/schemas/PaginationInfo'
                  total_count:
                    type: integer
                    description: Total number of trips matching the filter
                required:
                  - trips
                  - pagination
                  - total_count
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a new trip
      description: Create a new trip with specified parameters
      operationId: createTrip
      tags:
        - Trips
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
      responses:
        '201':
          description: Trip created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: Conflict - Trip already exists or vehicle unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /trips/{trip_id}:
    get:
      summary: Get trip by ID
      description: Retrieve detailed information about a specific trip
      operationId: getTripById
      tags:
        - Trips
      parameters:
        - $ref: '#/components/parameters/TripIdParam'
      responses:
        '200':
          description: Trip retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update trip
      description: Update an existing trip's details
      operationId: updateTrip
      tags:
        - Trips
      parameters:
        - $ref: '#/components/parameters/TripIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripRequest'
      responses:
        '200':
          description: Trip updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Conflict - Cannot update trip in current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Cancel trip
      description: Cancel a trip (soft delete)
      operationId: cancelTrip
      tags:
        - Trips
      parameters:
        - $ref: '#/components/parameters/TripIdParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for cancellation
                  maxLength: 500
              required:
                - reason
      responses:
        '200':
          description: Trip cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Conflict - Cannot cancel trip in current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /trips/{trip_id}/status:
    put:
      summary: Update trip status
      description: Update the status of a trip
      operationId: updateTripStatus
      tags:
        - Trips
      parameters:
        - $ref: '#/components/parameters/TripIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/TripStatus'
                location:
                  $ref: '#/components/schemas/Location'
                notes:
                  type: string
                  description: Optional notes about the status change
                  maxLength: 1000
              required:
                - status
      responses:
        '200':
          description: Trip status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Invalid status transition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /trips/{trip_id}/events:
    get:
      summary: Get trip events
      description: Retrieve the event history for a specific trip
      operationId: getTripEvents
      tags:
        - Trip Events
      parameters:
        - $ref: '#/components/parameters/TripIdParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: Trip events retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/TripEvent'
                  pagination:
                    $ref: '#/components/schemas/PaginationInfo'
                required:
                  - events
                  - pagination
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /trips/bulk:
    post:
      summary: Bulk create trips
      description: Create multiple trips in a single request
      operationId: bulkCreateTrips
      tags:
        - Bulk Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                trips:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateTripRequest'
                  maxItems: 100
              required:
                - trips
      responses:
        '201':
          description: Trips created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  created_trips:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trip'
                  failed_trips:
                    type: array
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                        error:
                          $ref: '#/components/schemas/ErrorResponse'
                required:
                  - created_trips
                  - failed_trips
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /health:
    get:
      summary: Health check
      description: Check the health status of the trip service
      operationId: healthCheck
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from the authentication service

  parameters:
    TripIdParam:
      name: trip_id
      in: path
      required: true
      description: Unique identifier for the trip
      schema:
        type: string
        format: uuid
        example: "123e4567-e89b-12d3-a456-426614174000"

    PageParam:
      name: page
      in: query
      description: Page number for pagination (1-based)
      schema:
        type: integer
        minimum: 1
        default: 1

    LimitParam:
      name: limit
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    SortParam:
      name: sort
      in: query
      description: Sort order (field:direction)
      schema:
        type: string
        pattern: '^[a-zA-Z_][a-zA-Z0-9_]*:(asc|desc)$'
        default: "created_at:desc"
        example: "created_at:desc"

  schemas:
    Trip:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the trip
          readOnly: true
        status:
          $ref: '#/components/schemas/TripStatus'
        vehicle_id:
          type: string
          format: uuid
          description: ID of the assigned vehicle
        route_id:
          type: string
          format: uuid
          description: ID of the assigned route
          nullable: true
        origin:
          $ref: '#/components/schemas/Location'
        destination:
          $ref: '#/components/schemas/Location'
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: Intermediate waypoints for the trip
        sector:
          $ref: '#/components/schemas/Sector'
        priority:
          $ref: '#/components/schemas/TripPriority'
        scheduled_start_time:
          type: string
          format: date-time
          description: Scheduled start time for the trip
          nullable: true
        actual_start_time:
          type: string
          format: date-time
          description: Actual start time of the trip
          nullable: true
          readOnly: true
        estimated_end_time:
          type: string
          format: date-time
          description: Estimated completion time
          nullable: true
        actual_end_time:
          type: string
          format: date-time
          description: Actual completion time
          nullable: true
          readOnly: true
        distance_km:
          type: number
          format: float
          description: Total distance of the trip in kilometers
          nullable: true
          readOnly: true
        duration_minutes:
          type: integer
          description: Duration of the trip in minutes
          nullable: true
          readOnly: true
        passenger_count:
          type: integer
          minimum: 0
          description: Number of passengers (for ride-hail sector)
          nullable: true
        cargo_weight_kg:
          type: number
          format: float
          minimum: 0
          description: Weight of cargo in kilograms
          nullable: true
        special_requirements:
          type: array
          items:
            type: string
          description: Special requirements for the trip
        metadata:
          type: object
          additionalProperties: true
          description: Additional sector-specific metadata
        created_at:
          type: string
          format: date-time
          description: Trip creation timestamp
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          readOnly: true
        created_by:
          type: string
          description: ID of the user who created the trip
          readOnly: true
      required:
        - id
        - status
        - origin
        - destination
        - sector
        - priority
        - created_at
        - updated_at
        - created_by

    CreateTripRequest:
      type: object
      properties:
        vehicle_id:
          type: string
          format: uuid
          description: ID of the vehicle to assign (optional, can be auto-assigned)
        origin:
          $ref: '#/components/schemas/Location'
        destination:
          $ref: '#/components/schemas/Location'
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: Intermediate waypoints for the trip
        sector:
          $ref: '#/components/schemas/Sector'
        priority:
          $ref: '#/components/schemas/TripPriority'
        scheduled_start_time:
          type: string
          format: date-time
          description: Scheduled start time for the trip
        passenger_count:
          type: integer
          minimum: 0
          description: Number of passengers (for ride-hail sector)
        cargo_weight_kg:
          type: number
          format: float
          minimum: 0
          description: Weight of cargo in kilograms
        special_requirements:
          type: array
          items:
            type: string
          description: Special requirements for the trip
        metadata:
          type: object
          additionalProperties: true
          description: Additional sector-specific metadata
      required:
        - origin
        - destination
        - sector
        - priority

    UpdateTripRequest:
      type: object
      properties:
        vehicle_id:
          type: string
          format: uuid
          description: ID of the vehicle to assign
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: Intermediate waypoints for the trip
        priority:
          $ref: '#/components/schemas/TripPriority'
        scheduled_start_time:
          type: string
          format: date-time
          description: Scheduled start time for the trip
        passenger_count:
          type: integer
          minimum: 0
          description: Number of passengers (for ride-hail sector)
        cargo_weight_kg:
          type: number
          format: float
          minimum: 0
          description: Weight of cargo in kilograms
        special_requirements:
          type: array
          items:
            type: string
          description: Special requirements for the trip
        metadata:
          type: object
          additionalProperties: true
          description: Additional sector-specific metadata

    TripStatus:
      type: string
      enum:
        - pending
        - assigned
        - en_route_to_pickup
        - at_pickup
        - in_transit
        - at_destination
        - completed
        - cancelled
        - failed
      description: Current status of the trip

    TripPriority:
      type: string
      enum:
        - low
        - normal
        - high
        - urgent
        - emergency
      description: Priority level of the trip

    Sector:
      type: string
      enum:
        - defense
        - mining
        - logistics
        - ridehail
      description: Operational sector for the trip

    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          description: Latitude in decimal degrees
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          description: Longitude in decimal degrees
        altitude:
          type: number
          format: float
          description: Altitude in meters above sea level
          nullable: true
        address:
          type: string
          description: Human-readable address
          nullable: true
        name:
          type: string
          description: Location name or identifier
          nullable: true
      required:
        - latitude
        - longitude

    TripEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the event
        trip_id:
          type: string
          format: uuid
          description: ID of the associated trip
        event_type:
          type: string
          enum:
            - created
            - assigned
            - started
            - waypoint_reached
            - completed
            - cancelled
            - failed
            - status_updated
          description: Type of event
        timestamp:
          type: string
          format: date-time
          description: When the event occurred
        location:
          $ref: '#/components/schemas/Location'
        data:
          type: object
          additionalProperties: true
          description: Event-specific data
        created_by:
          type: string
          description: ID of the user or system that created the event
      required:
        - id
        - trip_id
        - event_type
        - timestamp
        - created_by

    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
          description: Current page number
        limit:
          type: integer
          minimum: 1
          description: Number of items per page
        total_pages:
          type: integer
          minimum: 0
          description: Total number of pages
        has_next:
          type: boolean
          description: Whether there is a next page
        has_previous:
          type: boolean
          description: Whether there is a previous page
      required:
        - page
        - limit
        - total_pages
        - has_next
        - has_previous

    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          description: Overall health status
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        version:
          type: string
          description: Service version
        checks:
          type: object
          additionalProperties:
            type: object
            properties:
              status:
                type: string
                enum: [healthy, unhealthy]
              message:
                type: string
          description: Individual health check results
      required:
        - status
        - timestamp
        - version

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code or type
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          additionalProperties: true
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        request_id:
          type: string
          description: Request ID for tracing
      required:
        - error
        - message
        - timestamp

  responses:
    BadRequest:
      description: Bad request - Invalid input parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized - Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Not found - Resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: Trips
    description: Trip lifecycle management operations
  - name: Trip Events
    description: Trip event history and tracking
  - name: Bulk Operations
    description: Bulk operations for multiple trips
  - name: Health
    description: Service health and monitoring

externalDocs:
  description: AtlasMesh Fleet OS Documentation
  url: https://docs.atlasmesh.com
