openapi: 3.0.3
info:
  title: AtlasMesh Fleet Manager API
  description: |
    Vehicle fleet management service for AtlasMesh Fleet OS.
    
    Manages vehicle registration, status tracking, maintenance scheduling,
    and fleet optimization across all supported sectors.
    
    ## Authentication
    All endpoints require Bearer token authentication via the `Authorization` header.
    
    ## Rate Limits
    - Standard endpoints: 1000 requests/minute
    - Bulk operations: 100 requests/minute
    - Telemetry endpoints: 10000 requests/minute
    
    ## Versioning
    This API uses semantic versioning. Breaking changes increment the major version.
  version: 1.0.0
  contact:
    name: AtlasMesh API Team
    email: api-team@atlasmesh.com
    url: https://docs.atlasmesh.com
  license:
    name: Proprietary
    url: https://atlasmesh.com/license

servers:
  - url: http://fleet-manager:8080/api/v1
    description: Internal service endpoint
  - url: https://api.atlasmesh.com/fleet/v1
    description: Production API endpoint
  - url: https://api-staging.atlasmesh.com/fleet/v1
    description: Staging API endpoint

security:
  - BearerAuth: []

paths:
  /vehicles:
    get:
      summary: List vehicles
      description: Retrieve a paginated list of vehicles with optional filtering
      operationId: listVehicles
      tags:
        - Vehicles
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/SortParam'
        - name: status
          in: query
          description: Filter by vehicle status
          schema:
            $ref: '#/components/schemas/VehicleStatus'
        - name: sector
          in: query
          description: Filter by sector
          schema:
            $ref: '#/components/schemas/Sector'
        - name: vehicle_type
          in: query
          description: Filter by vehicle type
          schema:
            type: string
        - name: location_radius_km
          in: query
          description: Filter by location within radius (requires lat/lng)
          schema:
            type: number
            format: float
            minimum: 0
        - name: latitude
          in: query
          description: Latitude for location-based filtering
          schema:
            type: number
            format: double
            minimum: -90
            maximum: 90
        - name: longitude
          in: query
          description: Longitude for location-based filtering
          schema:
            type: number
            format: double
            minimum: -180
            maximum: 180
      responses:
        '200':
          description: List of vehicles retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vehicle'
                  pagination:
                    $ref: '#/components/schemas/PaginationInfo'
                  total_count:
                    type: integer
                required:
                  - vehicles
                  - pagination
                  - total_count
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Register a new vehicle
      description: Register a new vehicle in the fleet
      operationId: registerVehicle
      tags:
        - Vehicles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterVehicleRequest'
      responses:
        '201':
          description: Vehicle registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: Conflict - Vehicle already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /vehicles/{vehicle_id}:
    get:
      summary: Get vehicle by ID
      description: Retrieve detailed information about a specific vehicle
      operationId: getVehicleById
      tags:
        - Vehicles
      parameters:
        - $ref: '#/components/parameters/VehicleIdParam'
      responses:
        '200':
          description: Vehicle retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update vehicle
      description: Update vehicle information and configuration
      operationId: updateVehicle
      tags:
        - Vehicles
      parameters:
        - $ref: '#/components/parameters/VehicleIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVehicleRequest'
      responses:
        '200':
          description: Vehicle updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Decommission vehicle
      description: Decommission a vehicle from the fleet
      operationId: decommissionVehicle
      tags:
        - Vehicles
      parameters:
        - $ref: '#/components/parameters/VehicleIdParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for decommissioning
                  maxLength: 500
              required:
                - reason
      responses:
        '200':
          description: Vehicle decommissioned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Cannot decommission vehicle in current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /vehicles/{vehicle_id}/status:
    put:
      summary: Update vehicle status
      description: Update the operational status of a vehicle
      operationId: updateVehicleStatus
      tags:
        - Vehicles
      parameters:
        - $ref: '#/components/parameters/VehicleIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/VehicleStatus'
                location:
                  $ref: '#/components/schemas/Location'
                battery_level:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 100
                  description: Battery level percentage
                fuel_level:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 100
                  description: Fuel level percentage
                odometer_km:
                  type: number
                  format: float
                  minimum: 0
                  description: Current odometer reading in kilometers
                notes:
                  type: string
                  description: Optional notes about the status change
                  maxLength: 1000
              required:
                - status
      responses:
        '200':
          description: Vehicle status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /vehicles/{vehicle_id}/maintenance:
    get:
      summary: Get vehicle maintenance history
      description: Retrieve maintenance history for a specific vehicle
      operationId: getVehicleMaintenanceHistory
      tags:
        - Maintenance
      parameters:
        - $ref: '#/components/parameters/VehicleIdParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: Maintenance history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_records:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaintenanceRecord'
                  pagination:
                    $ref: '#/components/schemas/PaginationInfo'
                required:
                  - maintenance_records
                  - pagination
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Schedule maintenance
      description: Schedule maintenance for a vehicle
      operationId: scheduleVehicleMaintenance
      tags:
        - Maintenance
      parameters:
        - $ref: '#/components/parameters/VehicleIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleMaintenanceRequest'
      responses:
        '201':
          description: Maintenance scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceRecord'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /vehicles/{vehicle_id}/telemetry:
    post:
      summary: Submit vehicle telemetry
      description: Submit real-time telemetry data for a vehicle
      operationId: submitVehicleTelemetry
      tags:
        - Telemetry
      parameters:
        - $ref: '#/components/parameters/VehicleIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTelemetry'
      responses:
        '202':
          description: Telemetry data accepted for processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Telemetry data accepted"
                  timestamp:
                    type: string
                    format: date-time
                required:
                  - message
                  - timestamp
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /fleet/analytics:
    get:
      summary: Get fleet analytics
      description: Retrieve fleet-wide analytics and metrics
      operationId: getFleetAnalytics
      tags:
        - Analytics
      parameters:
        - name: time_range
          in: query
          description: Time range for analytics
          schema:
            type: string
            enum: [1h, 24h, 7d, 30d, 90d]
            default: "24h"
        - name: sector
          in: query
          description: Filter by sector
          schema:
            $ref: '#/components/schemas/Sector'
        - name: metrics
          in: query
          description: Specific metrics to include
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [utilization, availability, efficiency, maintenance_cost]
      responses:
        '200':
          description: Fleet analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetAnalytics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /health:
    get:
      summary: Health check
      description: Check the health status of the fleet manager service
      operationId: healthCheck
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    VehicleIdParam:
      name: vehicle_id
      in: path
      required: true
      description: Unique identifier for the vehicle
      schema:
        type: string
        format: uuid

    PageParam:
      name: page
      in: query
      description: Page number for pagination (1-based)
      schema:
        type: integer
        minimum: 1
        default: 1

    LimitParam:
      name: limit
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    SortParam:
      name: sort
      in: query
      description: Sort order (field:direction)
      schema:
        type: string
        pattern: '^[a-zA-Z_][a-zA-Z0-9_]*:(asc|desc)$'
        default: "created_at:desc"

  schemas:
    Vehicle:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the vehicle
          readOnly: true
        name:
          type: string
          description: Human-readable name for the vehicle
        status:
          $ref: '#/components/schemas/VehicleStatus'
        vehicle_type:
          type: string
          description: Type of vehicle (e.g., ugv_themis, truck, drone)
        sector:
          $ref: '#/components/schemas/Sector'
        manufacturer:
          type: string
          description: Vehicle manufacturer
        model:
          type: string
          description: Vehicle model
        year:
          type: integer
          minimum: 1900
          maximum: 2100
          description: Manufacturing year
        serial_number:
          type: string
          description: Vehicle serial number
        license_plate:
          type: string
          description: License plate number
          nullable: true
        vin:
          type: string
          description: Vehicle Identification Number
          nullable: true
        specifications:
          $ref: '#/components/schemas/VehicleSpecifications'
        current_location:
          $ref: '#/components/schemas/Location'
        battery_level:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Current battery level percentage
          nullable: true
        fuel_level:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Current fuel level percentage
          nullable: true
        odometer_km:
          type: number
          format: float
          minimum: 0
          description: Current odometer reading in kilometers
        last_maintenance_date:
          type: string
          format: date
          description: Date of last maintenance
          nullable: true
        next_maintenance_date:
          type: string
          format: date
          description: Date of next scheduled maintenance
          nullable: true
        maintenance_due_km:
          type: number
          format: float
          description: Odometer reading when maintenance is due
          nullable: true
        software_version:
          type: string
          description: Current software version
        firmware_version:
          type: string
          description: Current firmware version
        profile_version:
          type: string
          description: Vehicle profile version
        last_seen_at:
          type: string
          format: date-time
          description: Last time vehicle was seen online
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Vehicle registration timestamp
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          readOnly: true
        metadata:
          type: object
          additionalProperties: true
          description: Additional sector-specific metadata
      required:
        - id
        - name
        - status
        - vehicle_type
        - sector
        - manufacturer
        - model
        - year
        - serial_number
        - specifications
        - created_at
        - updated_at

    RegisterVehicleRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name for the vehicle
        vehicle_type:
          type: string
          description: Type of vehicle
        sector:
          $ref: '#/components/schemas/Sector'
        manufacturer:
          type: string
          description: Vehicle manufacturer
        model:
          type: string
          description: Vehicle model
        year:
          type: integer
          minimum: 1900
          maximum: 2100
          description: Manufacturing year
        serial_number:
          type: string
          description: Vehicle serial number
        license_plate:
          type: string
          description: License plate number
        vin:
          type: string
          description: Vehicle Identification Number
        specifications:
          $ref: '#/components/schemas/VehicleSpecifications'
        initial_location:
          $ref: '#/components/schemas/Location'
        software_version:
          type: string
          description: Initial software version
        firmware_version:
          type: string
          description: Initial firmware version
        profile_version:
          type: string
          description: Vehicle profile version
        metadata:
          type: object
          additionalProperties: true
          description: Additional sector-specific metadata
      required:
        - name
        - vehicle_type
        - sector
        - manufacturer
        - model
        - year
        - serial_number
        - specifications

    UpdateVehicleRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name for the vehicle
        license_plate:
          type: string
          description: License plate number
        specifications:
          $ref: '#/components/schemas/VehicleSpecifications'
        software_version:
          type: string
          description: Software version
        firmware_version:
          type: string
          description: Firmware version
        profile_version:
          type: string
          description: Vehicle profile version
        metadata:
          type: object
          additionalProperties: true
          description: Additional sector-specific metadata

    VehicleSpecifications:
      type: object
      properties:
        length_m:
          type: number
          format: float
          minimum: 0
          description: Vehicle length in meters
        width_m:
          type: number
          format: float
          minimum: 0
          description: Vehicle width in meters
        height_m:
          type: number
          format: float
          minimum: 0
          description: Vehicle height in meters
        weight_kg:
          type: number
          format: float
          minimum: 0
          description: Vehicle weight in kilograms
        max_payload_kg:
          type: number
          format: float
          minimum: 0
          description: Maximum payload capacity in kilograms
        max_speed_kmh:
          type: number
          format: float
          minimum: 0
          description: Maximum speed in km/h
        battery_capacity_kwh:
          type: number
          format: float
          minimum: 0
          description: Battery capacity in kWh
          nullable: true
        fuel_tank_capacity_l:
          type: number
          format: float
          minimum: 0
          description: Fuel tank capacity in liters
          nullable: true
        range_km:
          type: number
          format: float
          minimum: 0
          description: Maximum range in kilometers
        sensors:
          type: array
          items:
            $ref: '#/components/schemas/SensorSpec'
          description: List of installed sensors
        capabilities:
          type: array
          items:
            type: string
          description: Vehicle capabilities
      required:
        - length_m
        - width_m
        - height_m
        - weight_kg
        - max_payload_kg
        - max_speed_kmh
        - range_km

    SensorSpec:
      type: object
      properties:
        type:
          type: string
          enum: [lidar, camera, radar, imu, gnss, ultrasonic]
          description: Type of sensor
        model:
          type: string
          description: Sensor model
        position:
          $ref: '#/components/schemas/SensorPosition'
        specifications:
          type: object
          additionalProperties: true
          description: Sensor-specific specifications
      required:
        - type
        - model
        - position

    SensorPosition:
      type: object
      properties:
        x:
          type: number
          format: float
          description: X coordinate relative to vehicle center
        y:
          type: number
          format: float
          description: Y coordinate relative to vehicle center
        z:
          type: number
          format: float
          description: Z coordinate relative to vehicle center
        roll:
          type: number
          format: float
          description: Roll angle in radians
        pitch:
          type: number
          format: float
          description: Pitch angle in radians
        yaw:
          type: number
          format: float
          description: Yaw angle in radians
      required:
        - x
        - y
        - z

    VehicleStatus:
      type: string
      enum:
        - available
        - assigned
        - in_transit
        - charging
        - maintenance
        - offline
        - decommissioned
      description: Current operational status of the vehicle

    Sector:
      type: string
      enum:
        - defense
        - mining
        - logistics
        - ridehail
      description: Operational sector

    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        altitude:
          type: number
          format: float
          nullable: true
        heading:
          type: number
          format: float
          minimum: 0
          maximum: 360
          description: Heading in degrees
          nullable: true
        accuracy:
          type: number
          format: float
          minimum: 0
          description: Position accuracy in meters
          nullable: true
        timestamp:
          type: string
          format: date-time
          description: Location timestamp
      required:
        - latitude
        - longitude

    MaintenanceRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the maintenance record
        vehicle_id:
          type: string
          format: uuid
          description: ID of the vehicle
        type:
          type: string
          enum: [scheduled, unscheduled, emergency, inspection]
          description: Type of maintenance
        status:
          type: string
          enum: [scheduled, in_progress, completed, cancelled]
          description: Status of the maintenance
        scheduled_date:
          type: string
          format: date-time
          description: Scheduled maintenance date
        actual_start_date:
          type: string
          format: date-time
          description: Actual start date
          nullable: true
        actual_end_date:
          type: string
          format: date-time
          description: Actual completion date
          nullable: true
        description:
          type: string
          description: Description of maintenance work
        technician:
          type: string
          description: Technician responsible for maintenance
        cost:
          type: number
          format: float
          minimum: 0
          description: Cost of maintenance
          nullable: true
        parts_replaced:
          type: array
          items:
            type: string
          description: List of parts replaced
        notes:
          type: string
          description: Additional notes
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - vehicle_id
        - type
        - status
        - scheduled_date
        - description
        - created_at
        - updated_at

    ScheduleMaintenanceRequest:
      type: object
      properties:
        type:
          type: string
          enum: [scheduled, unscheduled, emergency, inspection]
          description: Type of maintenance
        scheduled_date:
          type: string
          format: date-time
          description: Scheduled maintenance date
        description:
          type: string
          description: Description of maintenance work
        technician:
          type: string
          description: Technician responsible for maintenance
        estimated_duration_hours:
          type: number
          format: float
          minimum: 0
          description: Estimated duration in hours
        priority:
          type: string
          enum: [low, normal, high, urgent]
          description: Maintenance priority
        notes:
          type: string
          description: Additional notes
      required:
        - type
        - scheduled_date
        - description

    VehicleTelemetry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Telemetry timestamp
        location:
          $ref: '#/components/schemas/Location'
        speed_kmh:
          type: number
          format: float
          minimum: 0
          description: Current speed in km/h
        battery_level:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Battery level percentage
          nullable: true
        fuel_level:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Fuel level percentage
          nullable: true
        odometer_km:
          type: number
          format: float
          minimum: 0
          description: Odometer reading in kilometers
        engine_hours:
          type: number
          format: float
          minimum: 0
          description: Engine hours
          nullable: true
        diagnostics:
          type: object
          additionalProperties: true
          description: Diagnostic data
        sensor_data:
          type: object
          additionalProperties: true
          description: Sensor readings
      required:
        - timestamp
        - location
        - speed_kmh
        - odometer_km

    FleetAnalytics:
      type: object
      properties:
        time_range:
          type: string
          description: Time range for the analytics
        total_vehicles:
          type: integer
          description: Total number of vehicles in fleet
        available_vehicles:
          type: integer
          description: Number of available vehicles
        utilization_rate:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Fleet utilization rate percentage
        average_efficiency:
          type: number
          format: float
          description: Average fleet efficiency metric
        total_distance_km:
          type: number
          format: float
          description: Total distance traveled by fleet
        total_trips:
          type: integer
          description: Total number of trips completed
        maintenance_cost:
          type: number
          format: float
          description: Total maintenance cost
        fuel_consumption:
          type: number
          format: float
          description: Total fuel consumption
        by_sector:
          type: object
          additionalProperties:
            type: object
            properties:
              vehicle_count:
                type: integer
              utilization_rate:
                type: number
                format: float
              total_distance_km:
                type: number
                format: float
        by_status:
          type: object
          additionalProperties:
            type: integer
          description: Vehicle count by status
      required:
        - time_range
        - total_vehicles
        - available_vehicles
        - utilization_rate

    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        total_pages:
          type: integer
          minimum: 0
        has_next:
          type: boolean
        has_previous:
          type: boolean
      required:
        - page
        - limit
        - total_pages
        - has_next
        - has_previous

    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        checks:
          type: object
          additionalProperties:
            type: object
            properties:
              status:
                type: string
                enum: [healthy, unhealthy]
              message:
                type: string
      required:
        - status
        - timestamp
        - version

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time
        request_id:
          type: string
      required:
        - error
        - message
        - timestamp

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: Vehicles
    description: Vehicle management operations
  - name: Maintenance
    description: Vehicle maintenance operations
  - name: Telemetry
    description: Vehicle telemetry operations
  - name: Analytics
    description: Fleet analytics and reporting
  - name: Health
    description: Service health monitoring
