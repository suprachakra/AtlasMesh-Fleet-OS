openapi: 3.0.3
info:
  title: AtlasMesh Dispatch Service API
  version: 0.1.0
  description: |
    Trip dispatch and vehicle assignment service for the AtlasMesh Fleet OS.
    
    Handles trip lifecycle management, vehicle assignment optimization,
    and real-time dispatch decisions with policy enforcement.
    
  contact:
    name: AtlasMesh Dispatch Team
    email: dispatch@atlasmesh.ai

servers:
  - url: http://dispatch-service:8080/v1
    description: Internal service mesh

security:
  - bearerAuth: []

paths:
  # Trip Management
  /trips:
    get:
      summary: List trips with filtering and pagination
      operationId: listTrips
      tags: [Trips]
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - $ref: '#/components/parameters/SectorFilter'
        - $ref: '#/components/parameters/StatusFilter'
        - $ref: '#/components/parameters/VehicleIdFilter'
        - $ref: '#/components/parameters/DateRangeFilter'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationOffset'
      responses:
        '200':
          description: List of trips
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripsResponse'

    post:
      summary: Create new trip
      operationId: createTrip
      tags: [Trips]
      parameters:
        - $ref: '#/components/parameters/TenantId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
      responses:
        '201':
          description: Trip created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '409':
          description: Policy violation or resource conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyViolationError'

  /trips/{tripId}:
    get:
      summary: Get trip details by ID
      operationId: getTripById
      tags: [Trips]
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: Trip details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        '404':
          description: Trip not found

    patch:
      summary: Update trip
      operationId: updateTrip
      tags: [Trips]
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripRequest'
      responses:
        '200':
          description: Trip updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'

  /trips/{tripId}/assign:
    post:
      summary: Assign vehicle to trip
      operationId: assignVehicleToTrip
      tags: [Dispatch]
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignVehicleRequest'
      responses:
        '200':
          description: Vehicle assigned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        '409':
          description: Assignment conflict or policy violation

  /trips/{tripId}/start:
    post:
      summary: Start trip execution
      operationId: startTrip
      tags: [Dispatch]
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTripRequest'
      responses:
        '200':
          description: Trip started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'

  /trips/{tripId}/cancel:
    post:
      summary: Cancel trip
      operationId: cancelTrip
      tags: [Dispatch]
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelTripRequest'
      responses:
        '200':
          description: Trip cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'

  /trips/{tripId}/complete:
    post:
      summary: Mark trip as completed
      operationId: completeTrip
      tags: [Dispatch]
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTripRequest'
      responses:
        '200':
          description: Trip completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'

  # Dispatch Operations
  /dispatch/optimize:
    post:
      summary: Optimize vehicle assignments for pending trips
      operationId: optimizeAssignments
      tags: [Dispatch]
      parameters:
        - $ref: '#/components/parameters/TenantId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimizeRequest'
      responses:
        '200':
          description: Optimization completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationResult'

  /dispatch/assignments:
    get:
      summary: Get current vehicle assignments
      operationId: getAssignments
      tags: [Dispatch]
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - $ref: '#/components/parameters/VehicleIdFilter'
        - name: active_only
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Current assignments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentsResponse'

  /dispatch/capacity:
    get:
      summary: Get fleet capacity analysis
      operationId: getFleetCapacity
      tags: [Analytics]
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - name: time_horizon
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d]
            default: 24h
      responses:
        '200':
          description: Fleet capacity analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityAnalysis'

  # Policy Integration
  /dispatch/policy/validate:
    post:
      summary: Validate trip against policies
      operationId: validateTripPolicy
      tags: [Policy]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyValidationRequest'
      responses:
        '200':
          description: Policy validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyValidationResult'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    TenantId:
      name: X-Tenant-ID
      in: header
      required: true
      schema:
        type: string
        format: uuid

    TripId:
      name: tripId
      in: path
      required: true
      schema:
        type: string
        format: uuid

    SectorFilter:
      name: sector
      in: query
      schema:
        type: array
        items:
          type: string
          enum: [defense, mining, logistics, ride_hail]

    StatusFilter:
      name: status
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/TripStatus'

    VehicleIdFilter:
      name: vehicle_id
      in: query
      schema:
        type: array
        items:
          type: string

    DateRangeFilter:
      name: date_range
      in: query
      schema:
        type: string
        pattern: '^\\d{4}-\\d{2}-\\d{2}/\\d{4}-\\d{2}-\\d{2}$'

    PaginationLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    PaginationOffset:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0

  schemas:
    # Enums
    TripStatus:
      type: string
      enum: 
        - draft
        - scheduled
        - queued
        - assigned
        - en_route
        - on_trip
        - paused
        - awaiting_assist
        - charging
        - error
        - safe_stopped
        - completed
        - expired
        - cancelled
        - aborted

    TripType:
      type: string
      enum:
        - release_run
        - operation_run
        - mapping_run
        - calibration
        - passenger_ride_solo
        - passenger_ride_shared
        - delivery
        - logistics_run
        - yard_move
        - reposition
        - maintenance
        - charging
        - emergency
        - recovery
        - training
        - validation

    Sector:
      type: string
      enum: [defense, mining, logistics, ride_hail]

    Priority:
      type: integer
      minimum: 1
      maximum: 10
      description: Trip priority (1=lowest, 10=highest)

    # Core Domain Models
    Trip:
      type: object
      required: [id, tenant_id, sector, type, status, created_at, schedule]
      properties:
        id:
          type: string
          format: uuid
        tenant_id:
          type: string
          format: uuid
        sector:
          $ref: '#/components/schemas/Sector'
        type:
          $ref: '#/components/schemas/TripType'
        status:
          $ref: '#/components/schemas/TripStatus'
        priority:
          $ref: '#/components/schemas/Priority'
        vehicle_id:
          type: string
          nullable: true
        operator_id:
          type: string
          format: uuid
          nullable: true
        
        # Trip Definition
        schedule:
          $ref: '#/components/schemas/Schedule'
        route:
          $ref: '#/components/schemas/Route'
        manifest:
          $ref: '#/components/schemas/TripManifest'
        
        # Policy & Configuration
        policy_pack_id:
          type: string
        map_version:
          type: string
        odd_constraints:
          $ref: '#/components/schemas/ODDConstraints'
        
        # State Tracking
        state_history:
          type: array
          items:
            $ref: '#/components/schemas/StateTransition'
        
        # Metrics
        estimated_duration_minutes:
          type: integer
        actual_duration_minutes:
          type: integer
          nullable: true
        estimated_distance_meters:
          type: integer
        actual_distance_meters:
          type: integer
          nullable: true
        
        # Timestamps
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        scheduled_start:
          type: string
          format: date-time
        actual_start:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true

    CreateTripRequest:
      type: object
      required: [sector, type, schedule, route_params]
      properties:
        sector:
          $ref: '#/components/schemas/Sector'
        type:
          $ref: '#/components/schemas/TripType'
        priority:
          $ref: '#/components/schemas/Priority'
          default: 5
        operator_id:
          type: string
          format: uuid
        vehicle_id:
          type: string
          nullable: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        route_params:
          $ref: '#/components/schemas/RouteParams'
        manifest:
          $ref: '#/components/schemas/TripManifest'
        
        # Advanced Options
        map_version:
          type: string
          nullable: true
        policy_pack_override:
          type: string
          nullable: true
        experimental_routes:
          type: array
          items:
            type: string
        weather_override:
          type: boolean
          default: false

    UpdateTripRequest:
      type: object
      properties:
        priority:
          $ref: '#/components/schemas/Priority'
        schedule:
          $ref: '#/components/schemas/Schedule'
        route_params:
          $ref: '#/components/schemas/RouteParams'
        manifest:
          $ref: '#/components/schemas/TripManifest'

    Schedule:
      type: object
      required: [start_time]
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
          nullable: true
        duration_minutes:
          type: integer
          minimum: 1
          nullable: true
        timezone:
          type: string
          default: "UTC"
        recurrence:
          $ref: '#/components/schemas/RecurrencePattern'

    RecurrencePattern:
      type: object
      properties:
        pattern:
          type: string
          enum: [daily, weekly, monthly]
        interval:
          type: integer
          minimum: 1
        end_date:
          type: string
          format: date
        occurrences:
          type: integer
          minimum: 1

    Route:
      type: object
      required: [start_location, end_location]
      properties:
        start_location:
          $ref: '#/components/schemas/Location'
        end_location:
          $ref: '#/components/schemas/Location'
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/Waypoint'
        estimated_duration_minutes:
          type: integer
        estimated_distance_meters:
          type: integer
        estimated_energy_consumption:
          type: number
          format: double
        map_version:
          type: string
        route_confidence:
          type: number
          format: double
          minimum: 0
          maximum: 1

    RouteParams:
      type: object
      required: [start_location, end_location]
      properties:
        start_location:
          $ref: '#/components/schemas/Location'
        end_location:
          $ref: '#/components/schemas/Location'
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        optimize_for:
          type: string
          enum: [time, distance, energy, safety, cost]
          default: safety
        constraints:
          $ref: '#/components/schemas/RouteConstraints'

    RouteConstraints:
      type: object
      properties:
        avoid_tolls:
          type: boolean
          default: false
        avoid_highways:
          type: boolean
          default: false
        max_speed_override:
          type: integer
          minimum: 1
        required_road_classes:
          type: array
          items:
            type: string
            enum: [highway, arterial, collector, local, private]
        forbidden_zones:
          type: array
          items:
            $ref: '#/components/schemas/GeofenceRef'

    Location:
      type: object
      required: [latitude, longitude]
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        altitude:
          type: number
          format: double
        heading:
          type: number
          format: double
          minimum: 0
          maximum: 360
        accuracy:
          type: number
          format: double
        address:
          type: string
        poi_id:
          type: string

    Waypoint:
      allOf:
        - $ref: '#/components/schemas/Location'
        - type: object
          properties:
            stop_duration_minutes:
              type: integer
              minimum: 0
            arrival_window:
              $ref: '#/components/schemas/TimeWindow'
            required:
              type: boolean
              default: true

    TimeWindow:
      type: object
      properties:
        earliest:
          type: string
          format: date-time
        latest:
          type: string
          format: date-time

    TripManifest:
      type: object
      properties:
        description:
          type: string
          maxLength: 500
        cargo:
          $ref: '#/components/schemas/CargoManifest'
        passengers:
          $ref: '#/components/schemas/PassengerManifest'
        special_requirements:
          type: array
          items:
            type: string
            enum: [medical_equipment, hazmat, oversized, refrigerated, security_escort]
        operator_notes:
          type: string
          maxLength: 1000
        customer_reference:
          type: string
        billing_code:
          type: string

    CargoManifest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CargoItem'
        total_weight_kg:
          type: number
          format: double
        total_volume_m3:
          type: number
          format: double

    CargoItem:
      type: object
      required: [description, weight_kg]
      properties:
        description:
          type: string
        weight_kg:
          type: number
          format: double
        dimensions:
          $ref: '#/components/schemas/Dimensions'
        hazmat_class:
          type: string
        value:
          type: number
          format: double
        fragile:
          type: boolean
          default: false

    PassengerManifest:
      type: object
      properties:
        capacity:
          type: integer
          minimum: 1
        booked:
          type: integer
          minimum: 0
        wheelchair_accessible:
          type: boolean
          default: false
        child_seats:
          type: integer
          minimum: 0
          default: 0

    Dimensions:
      type: object
      required: [length_m, width_m, height_m]
      properties:
        length_m:
          type: number
          format: double
        width_m:
          type: number
          format: double
        height_m:
          type: number
          format: double

    ODDConstraints:
      type: object
      properties:
        max_temperature_c:
          type: integer
        min_visibility_m:
          type: integer
        max_wind_speed_kmh:
          type: integer
        max_precipitation_mmh:
          type: integer
        required_road_quality:
          type: string
          enum: [paved, gravel, dirt, off_road]
        gps_required:
          type: boolean
          default: true

    StateTransition:
      type: object
      required: [from_status, to_status, timestamp]
      properties:
        from_status:
          $ref: '#/components/schemas/TripStatus'
        to_status:
          $ref: '#/components/schemas/TripStatus'
        timestamp:
          type: string
          format: date-time
        reason:
          type: string
        triggered_by:
          type: string
          enum: [system, operator, policy, vehicle, weather, emergency]
        details:
          type: object
          additionalProperties: true

    # Assignment & Dispatch Models
    Assignment:
      type: object
      required: [id, trip_id, vehicle_id, assigned_at, status]
      properties:
        id:
          type: string
          format: uuid
        trip_id:
          type: string
          format: uuid
        vehicle_id:
          type: string
        assigned_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, active, completed, cancelled]
        assignment_score:
          type: number
          format: double
          description: Optimization score for this assignment
        estimated_pickup_time:
          type: string
          format: date-time
        estimated_completion_time:
          type: string
          format: date-time

    AssignVehicleRequest:
      type: object
      required: [vehicle_id]
      properties:
        vehicle_id:
          type: string
        force_assignment:
          type: boolean
          default: false
        operator_override:
          type: boolean
          default: false
        override_reason:
          type: string

    StartTripRequest:
      type: object
      properties:
        pre_trip_checklist:
          $ref: '#/components/schemas/PreTripChecklist'
        operator_confirmation:
          type: boolean
          default: true

    PreTripChecklist:
      type: object
      properties:
        vehicle_inspection:
          type: boolean
        fuel_level_ok:
          type: boolean
        cargo_secured:
          type: boolean
        route_confirmed:
          type: boolean
        weather_acceptable:
          type: boolean
        permits_valid:
          type: boolean

    CancelTripRequest:
      type: object
      required: [reason]
      properties:
        reason:
          type: string
          enum: [user_cancelled, weather, vehicle_fault, policy_violation, emergency, resource_unavailable]
        details:
          type: string
          maxLength: 500
        refund_policy:
          type: string
          enum: [full, partial, none]

    CompleteTripRequest:
      type: object
      properties:
        completion_notes:
          type: string
          maxLength: 1000
        cargo_delivered:
          type: boolean
        passengers_dropped_off:
          type: boolean
        fuel_consumed:
          type: number
          format: double
        final_odometer:
          type: integer

    # Optimization Models
    OptimizeRequest:
      type: object
      properties:
        time_horizon_hours:
          type: integer
          minimum: 1
          maximum: 168
          default: 24
        objective:
          type: string
          enum: [minimize_cost, minimize_time, maximize_utilization, minimize_emissions]
          default: minimize_time
        constraints:
          $ref: '#/components/schemas/OptimizationConstraints'

    OptimizationConstraints:
      type: object
      properties:
        max_assignments_per_vehicle:
          type: integer
          minimum: 1
        driver_shift_limits:
          type: boolean
          default: true
        vehicle_capacity_constraints:
          type: boolean
          default: true
        geographical_constraints:
          type: array
          items:
            $ref: '#/components/schemas/GeofenceRef'

    OptimizationResult:
      type: object
      required: [optimization_id, status, assignments]
      properties:
        optimization_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [completed, partial, failed]
        objective_value:
          type: number
          format: double
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        unassigned_trips:
          type: array
          items:
            type: string
            format: uuid
        metrics:
          $ref: '#/components/schemas/OptimizationMetrics'
        created_at:
          type: string
          format: date-time

    OptimizationMetrics:
      type: object
      properties:
        total_distance_km:
          type: number
          format: double
        total_duration_hours:
          type: number
          format: double
        vehicle_utilization_pct:
          type: number
          format: double
        estimated_cost:
          type: number
          format: double
        estimated_emissions_kg_co2:
          type: number
          format: double

    # Analytics Models
    CapacityAnalysis:
      type: object
      required: [total_vehicles, available_vehicles, capacity_utilization]
      properties:
        total_vehicles:
          type: integer
        available_vehicles:
          type: integer
        capacity_utilization:
          type: number
          format: double
        demand_forecast:
          type: array
          items:
            $ref: '#/components/schemas/DemandForecast'
        bottlenecks:
          type: array
          items:
            $ref: '#/components/schemas/CapacityBottleneck'

    DemandForecast:
      type: object
      required: [time_slot, predicted_trips]
      properties:
        time_slot:
          type: string
          format: date-time
        predicted_trips:
          type: integer
        confidence:
          type: number
          format: double
          minimum: 0
          maximum: 1

    CapacityBottleneck:
      type: object
      required: [type, severity, description]
      properties:
        type:
          type: string
          enum: [vehicle_shortage, driver_shortage, geographical, temporal]
        severity:
          type: string
          enum: [low, medium, high, critical]
        description:
          type: string
        impact_trips:
          type: integer
        suggested_actions:
          type: array
          items:
            type: string

    # Policy Models
    PolicyValidationRequest:
      type: object
      required: [trip, context]
      properties:
        trip:
          $ref: '#/components/schemas/CreateTripRequest'
        context:
          $ref: '#/components/schemas/ValidationContext'

    ValidationContext:
      type: object
      required: [tenant_id]
      properties:
        tenant_id:
          type: string
          format: uuid
        current_weather:
          $ref: '#/components/schemas/WeatherConditions'
        fleet_status:
          $ref: '#/components/schemas/FleetStatus'
        active_restrictions:
          type: array
          items:
            type: string

    WeatherConditions:
      type: object
      properties:
        temperature_c:
          type: number
          format: double
        humidity_pct:
          type: integer
          minimum: 0
          maximum: 100
        visibility_m:
          type: integer
        wind_speed_kmh:
          type: number
          format: double
        precipitation_mmh:
          type: number
          format: double
        conditions:
          type: array
          items:
            type: string
            enum: [clear, cloudy, rain, snow, fog, dust_storm, sandstorm]

    FleetStatus:
      type: object
      properties:
        total_vehicles:
          type: integer
        healthy_vehicles:
          type: integer
        degraded_vehicles:
          type: integer
        maintenance_vehicles:
          type: integer
        average_battery_level:
          type: number
          format: double

    PolicyValidationResult:
      type: object
      required: [allowed, policies_evaluated]
      properties:
        allowed:
          type: boolean
        policies_evaluated:
          type: array
          items:
            type: string
        violations:
          type: array
          items:
            $ref: '#/components/schemas/PolicyViolation'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/PolicyWarning'
        final_decision_precedence:
          type: string
          enum: [safety, regulatory, tenant, sector, city, fleet, experimental]

    PolicyViolation:
      type: object
      required: [policy_id, severity, message]
      properties:
        policy_id:
          type: string
        severity:
          type: string
          enum: [error, warning]
        message:
          type: string
        suggested_fix:
          type: string

    PolicyWarning:
      type: object
      required: [policy_id, message]
      properties:
        policy_id:
          type: string
        message:
          type: string
        can_override:
          type: boolean

    # Utility Models
    GeofenceRef:
      type: object
      required: [id, type]
      properties:
        id:
          type: string
        type:
          type: string
          enum: [inclusion, exclusion]
        name:
          type: string

    # Response Collections
    TripsResponse:
      type: object
      required: [trips, pagination]
      properties:
        trips:
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        pagination:
          $ref: '#/components/schemas/PaginationMeta'

    AssignmentsResponse:
      type: object
      required: [assignments]
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        summary:
          $ref: '#/components/schemas/AssignmentSummary'

    AssignmentSummary:
      type: object
      properties:
        total_assignments:
          type: integer
        active_assignments:
          type: integer
        pending_assignments:
          type: integer
        vehicles_assigned:
          type: integer
        vehicles_available:
          type: integer

    PaginationMeta:
      type: object
      required: [offset, limit, total]
      properties:
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
        has_more:
          type: boolean

    # Error Models
    ValidationError:
      type: object
      required: [error, message, validation_errors]
      properties:
        error:
          type: string
          enum: [validation_failed]
        message:
          type: string
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/FieldError'
        timestamp:
          type: string
          format: date-time

    FieldError:
      type: object
      required: [field, code, message]
      properties:
        field:
          type: string
        code:
          type: string
        message:
          type: string
        value:
          type: string

    PolicyViolationError:
      type: object
      required: [error, message, violations]
      properties:
        error:
          type: string
          enum: [policy_violation]
        message:
          type: string
        violations:
          type: array
          items:
            $ref: '#/components/schemas/PolicyViolation'
        timestamp:
          type: string
          format: date-time
